{
  "version": 3,
  "sources": ["../../ethers/src.ts/utils.ts", "../../ethers/src.ts/_version.ts", "../../ethers/src.ts/ethers.ts", "../../use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../../use-sync-external-store/shim/index.js", "../../use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js", "../../use-sync-external-store/shim/with-selector.js", "../../@wagmi/core/dist/rpcs-b73a8f60.esm.js", "../../@wagmi/core/dist/chains-fd2c546c.esm.js", "../../@wagmi/core/dist/base-b565d5d4.esm.js", "../../zustand/esm/vanilla.js", "../../zustand/esm/middleware.js", "../../@wagmi/core/dist/client-a05fd511.esm.js", "../../@wagmi/core/dist/wagmi-core.esm.js", "../../zustand/esm/shallow.js", "../../wagmi/dist/wagmi.esm.js", "../../react-query/lib/core/subscribable.mjs", "../../react-query/lib/core/utils.mjs", "../../react-query/lib/core/focusManager.mjs", "../../react-query/lib/core/onlineManager.mjs", "../../react-query/lib/core/retryer.mjs", "../../react-query/lib/core/logger.mjs", "../../react-query/lib/core/notifyManager.mjs", "../../react-query/lib/core/removable.mjs", "../../react-query/lib/core/query.mjs", "../../react-query/lib/core/queryCache.mjs", "../../react-query/lib/core/mutation.mjs", "../../react-query/lib/core/mutationCache.mjs", "../../react-query/lib/core/infiniteQueryBehavior.mjs", "../../react-query/lib/core/queryClient.mjs", "../../react-query/lib/core/queryObserver.mjs", "../../react-query/lib/core/infiniteQueryObserver.mjs", "../../react-query/lib/core/mutationObserver.mjs", "../../react-query/lib/core/hydration.mjs", "../../react-query/lib/reactjs/reactBatchedUpdates.mjs", "../../react-query/lib/reactjs/setBatchUpdatesFn.mjs", "../../react-query/lib/reactjs/QueryClientProvider.mjs", "../../react-query/lib/reactjs/QueryErrorResetBoundary.mjs", "../../react-query/lib/reactjs/useIsFetching.mjs", "../../react-query/lib/reactjs/useSyncExternalStore.mjs", "../../react-query/lib/reactjs/useIsMutating.mjs", "../../react-query/lib/reactjs/useMutation.mjs", "../../react-query/lib/reactjs/utils.mjs", "../../react-query/lib/reactjs/useBaseQuery.mjs", "../../react-query/lib/reactjs/isRestoring.mjs", "../../react-query/lib/reactjs/useQueries.mjs", "../../react-query/lib/reactjs/Hydrate.mjs", "../../react-query/lib/persistQueryClient/persist.mjs", "../../react-query/lib/persistQueryClient/PersistQueryClientProvider.mjs", "../../react-query/lib/createWebStoragePersister/index.mjs"],
  "sourcesContent": [null, null, null, "/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n", "/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n", "const defaultAlchemyId = '_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC';\nconst defaultInfuraId = '84842078b09946638c03157f83405213';\nconst alchemyRpcUrls = {\n  mainnet: 'https://eth-mainnet.alchemyapi.io/v2',\n  ropsten: 'https://eth-ropsten.alchemyapi.io/v2',\n  rinkeby: 'https://eth-rinkeby.alchemyapi.io/v2',\n  goerli: 'https://eth-goerli.alchemyapi.io/v2',\n  kovan: 'https://eth-kovan.alchemyapi.io/v2',\n  optimism: 'https://opt-mainnet.g.alchemy.com/v2',\n  optimismKovan: 'https://opt-kovan.g.alchemy.com/v2',\n  polygon: 'https://polygon-mainnet.g.alchemy.com/v2',\n  polygonMumbai: 'https://polygon-mumbai.g.alchemy.com/v2',\n  arbitrum: 'https://arb-mainnet.g.alchemy.com/v2',\n  arbitrumRinkeby: 'https://arb-rinkeby.g.alchemy.com/v2'\n};\nconst infuraRpcUrls = {\n  mainnet: 'https://mainnet.infura.io/v3',\n  ropsten: 'https://ropsten.infura.io/v3',\n  rinkeby: 'https://rinkeby.infura.io/v3',\n  goerli: 'https://goerli.infura.io/v3',\n  kovan: 'https://kovan.infura.io/v3',\n  optimism: 'https://optimism-mainnet.infura.io/v3',\n  optimismKovan: 'https://optimism-kovan.infura.io/v3',\n  polygon: 'https://polygon-mainnet.infura.io/v3',\n  polygonMumbai: 'https://polygon-mumbai.infura.io/v3',\n  arbitrum: 'https://arbitrum-mainnet.infura.io/v3',\n  arbitrumRinkeby: 'https://arbitrum-rinkeby.infura.io/v3'\n};\nconst publicRpcUrls = {\n  mainnet: \"\".concat(alchemyRpcUrls.mainnet, \"/\").concat(defaultAlchemyId),\n  ropsten: \"\".concat(alchemyRpcUrls.ropsten, \"/\").concat(defaultAlchemyId),\n  rinkeby: \"\".concat(alchemyRpcUrls.rinkeby, \"/\").concat(defaultAlchemyId),\n  goerli: \"\".concat(alchemyRpcUrls.goerli, \"/\").concat(defaultAlchemyId),\n  kovan: \"\".concat(alchemyRpcUrls.kovan, \"/\").concat(defaultAlchemyId),\n  optimism: 'https://mainnet.optimism.io',\n  optimismKovan: 'https://kovan.optimism.io',\n  polygon: 'https://polygon-rpc.com',\n  polygonMumbai: 'https://matic-mumbai.chainstacklabs.com',\n  arbitrum: 'https://arb1.arbitrum.io/rpc',\n  arbitrumRinkeby: 'https://rinkeby.arbitrum.io/rpc'\n};\n\nexport { alchemyRpcUrls as a, defaultInfuraId as b, defaultAlchemyId as d, infuraRpcUrls as i, publicRpcUrls as p };\n", "import { a as alchemyRpcUrls, p as publicRpcUrls, i as infuraRpcUrls } from './rpcs-b73a8f60.esm.js';\n\nconst etherscanBlockExplorers = {\n  mainnet: {\n    name: 'Etherscan',\n    url: 'https://etherscan.io'\n  },\n  ropsten: {\n    name: 'Etherscan',\n    url: 'https://ropsten.etherscan.io'\n  },\n  rinkeby: {\n    name: 'Etherscan',\n    url: 'https://rinkeby.etherscan.io'\n  },\n  goerli: {\n    name: 'Etherscan',\n    url: 'https://goerli.etherscan.io'\n  },\n  kovan: {\n    name: 'Etherscan',\n    url: 'https://kovan.etherscan.io'\n  },\n  optimism: {\n    name: 'Etherscan',\n    url: 'https://optimistic.etherscan.io'\n  },\n  optimismKovan: {\n    name: 'Etherscan',\n    url: 'https://kovan-optimistic.etherscan.io'\n  },\n  polygon: {\n    name: 'PolygonScan',\n    url: 'https://polygonscan.com'\n  },\n  polygonMumbai: {\n    name: 'PolygonScan',\n    url: 'https://mumbai.polygonscan.com'\n  },\n  arbitrum: {\n    name: 'Arbiscan',\n    url: 'https://arbiscan.io'\n  },\n  arbitrumRinkeby: {\n    name: 'Arbiscan',\n    url: 'https://testnet.arbiscan.io'\n  }\n};\n\nconst chainId = {\n  mainnet: 1,\n  ropsten: 3,\n  rinkeby: 4,\n  goerli: 5,\n  kovan: 42,\n  optimism: 10,\n  optimismKovan: 69,\n  polygon: 137,\n  polygonMumbai: 80001,\n  arbitrum: 42161,\n  arbitrumRinkeby: 421611,\n  localhost: 1337,\n  hardhat: 31337,\n  foundry: 31337\n};\nconst mainnet = {\n  id: chainId.mainnet,\n  name: 'Ethereum',\n  network: 'homestead',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.mainnet,\n    default: publicRpcUrls.mainnet,\n    infura: infuraRpcUrls.mainnet,\n    public: publicRpcUrls.mainnet\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.mainnet,\n    default: etherscanBlockExplorers.mainnet\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 14353601\n  }\n};\nconst ropsten = {\n  id: chainId.ropsten,\n  name: 'Ropsten',\n  network: 'ropsten',\n  nativeCurrency: {\n    name: 'Ropsten Ether',\n    symbol: 'ROP',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.ropsten,\n    default: publicRpcUrls.ropsten,\n    infura: infuraRpcUrls.ropsten,\n    public: publicRpcUrls.ropsten\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.ropsten,\n    default: etherscanBlockExplorers.ropsten\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 12063863\n  },\n  testnet: true\n};\nconst rinkeby = {\n  id: chainId.rinkeby,\n  name: 'Rinkeby',\n  network: 'rinkeby',\n  nativeCurrency: {\n    name: 'Rinkeby Ether',\n    symbol: 'RIN',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.rinkeby,\n    default: publicRpcUrls.rinkeby,\n    infura: infuraRpcUrls.rinkeby,\n    public: publicRpcUrls.rinkeby\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.rinkeby,\n    default: etherscanBlockExplorers.rinkeby\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 10299530\n  },\n  testnet: true\n};\nconst goerli = {\n  id: chainId.goerli,\n  name: 'Goerli',\n  network: 'goerli',\n  nativeCurrency: {\n    name: 'Goerli Ether',\n    symbol: 'GOR',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.goerli,\n    default: publicRpcUrls.goerli,\n    infura: infuraRpcUrls.goerli,\n    public: publicRpcUrls.goerli\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.goerli,\n    default: etherscanBlockExplorers.goerli\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 6507670\n  },\n  testnet: true\n};\nconst kovan = {\n  id: chainId.kovan,\n  name: 'Kovan',\n  network: 'kovan',\n  nativeCurrency: {\n    name: 'Kovan Ether',\n    symbol: 'KOV',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.kovan,\n    default: publicRpcUrls.kovan,\n    infura: infuraRpcUrls.kovan,\n    public: publicRpcUrls.kovan\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.kovan,\n    default: etherscanBlockExplorers.kovan\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 30285908\n  },\n  testnet: true\n};\nconst optimism = {\n  id: chainId.optimism,\n  name: 'Optimism',\n  network: 'optimism',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimism,\n    default: publicRpcUrls.optimism,\n    infura: infuraRpcUrls.optimism,\n    public: publicRpcUrls.optimism\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimism,\n    default: etherscanBlockExplorers.optimism\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 4286263\n  }\n};\nconst optimismKovan = {\n  id: chainId.optimismKovan,\n  name: 'Optimism Kovan',\n  network: 'optimism-kovan',\n  nativeCurrency: {\n    name: 'Kovan Ether',\n    symbol: 'KOR',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimismKovan,\n    default: publicRpcUrls.optimismKovan,\n    infura: infuraRpcUrls.optimismKovan,\n    public: publicRpcUrls.optimismKovan\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimismKovan,\n    default: etherscanBlockExplorers.optimismKovan\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 1418387\n  },\n  testnet: true\n};\nconst polygon = {\n  id: chainId.polygon,\n  name: 'Polygon',\n  network: 'matic',\n  nativeCurrency: {\n    name: 'MATIC',\n    symbol: 'MATIC',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygon,\n    default: publicRpcUrls.polygon,\n    infura: infuraRpcUrls.polygon,\n    public: publicRpcUrls.polygon\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygon,\n    default: etherscanBlockExplorers.polygon\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 25770160\n  }\n};\nconst polygonMumbai = {\n  id: chainId.polygonMumbai,\n  name: 'Polygon Mumbai',\n  network: 'maticmum',\n  nativeCurrency: {\n    name: 'MATIC',\n    symbol: 'MATIC',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygonMumbai,\n    default: publicRpcUrls.polygonMumbai,\n    infura: infuraRpcUrls.polygonMumbai,\n    public: publicRpcUrls.polygonMumbai\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygonMumbai,\n    default: etherscanBlockExplorers.polygonMumbai\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 25444704\n  },\n  testnet: true\n};\nconst arbitrum = {\n  id: chainId.arbitrum,\n  name: 'Arbitrum One',\n  network: 'arbitrum',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrum,\n    default: publicRpcUrls.arbitrum,\n    infura: infuraRpcUrls.arbitrum,\n    public: publicRpcUrls.arbitrum\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: 'Arbitrum Explorer',\n      url: 'https://explorer.arbitrum.io'\n    },\n    etherscan: etherscanBlockExplorers.arbitrum,\n    default: etherscanBlockExplorers.arbitrum\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 7654707\n  }\n};\nconst arbitrumRinkeby = {\n  id: chainId.arbitrumRinkeby,\n  name: 'Arbitrum Rinkeby',\n  network: 'arbitrum-rinkeby',\n  nativeCurrency: {\n    name: 'Arbitrum Rinkeby Ether',\n    symbol: 'ARETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrumRinkeby,\n    default: publicRpcUrls.arbitrumRinkeby,\n    infura: infuraRpcUrls.arbitrumRinkeby,\n    public: publicRpcUrls.arbitrumRinkeby\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: 'Arbitrum Explorer',\n      url: 'https://rinkeby-explorer.arbitrum.io'\n    },\n    etherscan: etherscanBlockExplorers.arbitrumRinkeby,\n    default: etherscanBlockExplorers.arbitrumRinkeby\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 10228837\n  },\n  testnet: true\n};\nconst localhost = {\n  id: chainId.localhost,\n  name: 'Localhost',\n  network: 'localhost',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\nconst hardhat = {\n  id: chainId.hardhat,\n  name: 'Hardhat',\n  network: 'hardhat',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\nconst foundry = {\n  id: chainId.foundry,\n  name: 'Foundry',\n  network: 'foundry',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\n/**\n * Common chains for convenience\n * Should not contain all possible chains\n */\n\nconst chain = {\n  mainnet,\n  ropsten,\n  rinkeby,\n  goerli,\n  kovan,\n  optimism,\n  optimismKovan,\n  polygon,\n  polygonMumbai,\n  arbitrum,\n  arbitrumRinkeby,\n  localhost,\n  hardhat,\n  foundry\n};\nconst allChains = Object.values(chain);\nconst defaultChains = [chain.mainnet, chain.ropsten, chain.rinkeby, chain.goerli, chain.kovan];\nconst defaultL2Chains = [chain.arbitrum, chain.arbitrumRinkeby, chain.optimism, chain.optimismKovan];\n\nexport { allChains as a, chainId as b, chain as c, defaultChains as d, defaultL2Chains as e, etherscanBlockExplorers as f, arbitrum as g, arbitrumRinkeby as h, foundry as i, goerli as j, hardhat as k, kovan as l, localhost as m, mainnet as n, optimism as o, optimismKovan as p, polygon as q, polygonMumbai as r, rinkeby as s, ropsten as t };\n", "import EventEmitter from 'eventemitter3';\nimport { d as defaultChains } from './chains-fd2c546c.esm.js';\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}\n\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\n\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return fn;\n}\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === 'string') return Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10);\n  if (typeof chainId === 'bigint') return Number(chainId);\n  return chainId;\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor(\n  /** Number error code */\n  code,\n  /** Human-readable string */\n  message,\n  /** Low-level error */\n  internal,\n  /** Other useful information about error */\n  data) {\n    if (!Number.isInteger(code)) throw new Error('\"code\" must be an integer.');\n    if (!message || typeof message !== 'string') throw new Error('\"message\" must be a nonempty string.');\n    super(message);\n\n    _defineProperty(this, \"code\", void 0);\n\n    _defineProperty(this, \"data\", void 0);\n\n    _defineProperty(this, \"internal\", void 0);\n\n    this.code = code;\n    this.data = data;\n    this.internal = internal;\n  }\n\n}\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\n\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the 1000 <= 4999 range.\n   */\n  constructor(\n  /**\n   * Number error code\n   * @see https://eips.ethereum.org/EIPS/eip-1193#error-standards\n   */\n  code,\n  /** Human-readable string */\n  message,\n  /** Low-level error */\n  internal,\n  /** Other useful information about error */\n  data) {\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    super(code, message, internal, data);\n  }\n\n}\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'AddChainError');\n\n    _defineProperty(this, \"message\", 'Error adding chain');\n  }\n\n}\nclass ChainDoesNotSupportMulticallError extends Error {\n  constructor(_ref) {\n    let {\n      blockNumber,\n      chain\n    } = _ref;\n    super(\"Chain \\\"\".concat(chain.name, \"\\\" does not support multicall\").concat(blockNumber ? \" on block \".concat(blockNumber) : '', \".\"));\n\n    _defineProperty(this, \"name\", 'ChainDoesNotSupportMulticall');\n  }\n\n}\nclass ChainMismatchError extends Error {\n  constructor(_ref2) {\n    let {\n      activeChain,\n      targetChain\n    } = _ref2;\n    super(\"Chain mismatch: Expected \\\"\".concat(targetChain, \"\\\", received \\\"\").concat(activeChain, \".\"));\n\n    _defineProperty(this, \"name\", 'ChainMismatchError');\n  }\n\n}\nclass ChainNotConfiguredError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'ChainNotConfigured');\n\n    _defineProperty(this, \"message\", 'Chain not configured');\n  }\n\n}\nclass ConnectorAlreadyConnectedError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'ConnectorAlreadyConnectedError');\n\n    _defineProperty(this, \"message\", 'Connector already connected');\n  }\n\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'ConnectorNotFoundError');\n\n    _defineProperty(this, \"message\", 'Connector not found');\n  }\n\n}\nclass ContractMethodNoResultError extends Error {\n  constructor(_ref3) {\n    let {\n      addressOrName,\n      blockExplorer,\n      functionName\n    } = _ref3;\n    super([\"Function \\\"\".concat(functionName, \"\\\" on contract \\\"\").concat(addressOrName, \"\\\" returned an empty response.\"), '', \"Are you sure the function \\\"\".concat(functionName, \"\\\" exists on this contract?\"), ...(blockExplorer ? ['', \"\".concat(blockExplorer === null || blockExplorer === void 0 ? void 0 : blockExplorer.name, \": \").concat(blockExplorer === null || blockExplorer === void 0 ? void 0 : blockExplorer.url, \"/address/\").concat(addressOrName, \"#readContract\")] : [])].join('\\n'));\n\n    _defineProperty(this, \"name\", 'ContractMethodNoResultError');\n  }\n\n}\nclass ProviderChainsNotFound extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'ProviderChainsNotFound');\n\n    _defineProperty(this, \"message\", ['No chains were found on the wagmi provider. Some functions that require a chain may not work.', '', 'It is recommended to add a list of chains to the provider in `createClient`.', '', 'Example:', '', '```', \"import { getDefaultProvider } from 'ethers'\", \"import { chain, createClient } from 'wagmi'\", '', 'createClient({', '  provider: Object.assign(getDefaultProvider(), { chains: [chain.mainnet] })', '})', '```'].join('\\n'));\n  }\n\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(error) {\n    super(-32002, 'Resource unavailable', error);\n\n    _defineProperty(this, \"name\", 'ResourceUnavailable');\n  }\n\n}\nclass SwitchChainError extends ProviderRpcError {\n  constructor(error) {\n    super(4902, 'Error switching chain', error);\n\n    _defineProperty(this, \"name\", 'SwitchChainError');\n  }\n\n}\nclass SwitchChainNotSupportedError extends Error {\n  constructor(_ref4) {\n    let {\n      connector\n    } = _ref4;\n    super(\"\\\"\".concat(connector.name, \"\\\" does not support programmatic chain switching.\"));\n\n    _defineProperty(this, \"name\", 'SwitchChainNotSupportedError');\n  }\n\n}\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(error) {\n    super(4001, 'User rejected request', error);\n\n    _defineProperty(this, \"name\", 'UserRejectedRequestError');\n  }\n\n}\n\nclass Connector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"chains\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"ready\", void 0);\n\n    this.chains = chains;\n    this.options = options;\n  }\n\n  getBlockExplorerUrls(chain) {\n    var _chain$blockExplorers;\n\n    const {\n      default: blockExplorer,\n      ...blockExplorers\n    } = (_chain$blockExplorers = chain.blockExplorers) !== null && _chain$blockExplorers !== void 0 ? _chain$blockExplorers : {};\n    if (blockExplorer) return [blockExplorer.url, ...Object.values(blockExplorers).map(x => x.url)];\n    return [];\n  }\n\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.id === chainId);\n  }\n\n}\n\nexport { AddChainError as A, ConnectorAlreadyConnectedError as C, ProviderChainsNotFound as P, ResourceUnavailableError as R, SwitchChainNotSupportedError as S, UserRejectedRequestError as U, _defineProperty as _, ChainDoesNotSupportMulticallError as a, ContractMethodNoResultError as b, ConnectorNotFoundError as c, ChainMismatchError as d, Connector as e, ChainNotConfiguredError as f, ProviderRpcError as g, RpcError as h, SwitchChainError as i, _classPrivateFieldInitSpec as j, _classPrivateFieldGet as k, _classPrivateFieldSet as l, _classPrivateMethodInitSpec as m, normalizeChainId as n, _classPrivateMethodGet as o };\n", "const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (nextState !== state) {\n      const previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => listeners.clear();\n  const api = { setState, getState, subscribe, destroy };\n  state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore as default };\n", "var __defProp$1 = Object.defineProperty;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$2.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b)) {\n      if (__propIsEnum$2.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nconst reduxImpl = (reducer, initial) => (set, get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return __spreadValues$1({ dispatch: (...a) => api.dispatch(...a) }, initial);\n};\nconst redux = reduxImpl;\n\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$1.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$1.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const _a = devtoolsOptions, { enabled, anonymousActionType } = _a, options = __objRest(_a, [\"enabled\", \"anonymousActionType\"]);\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env && import.meta.env.MODE) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && enabled) {\n      console.warn(\"[zustand devtools middleware] Please install/enable Redux devtools extension\");\n    }\n    return fn(set, get, api);\n  }\n  const extension = extensionConnector.connect(options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    extension.send(nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction, get());\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  extension.init(initialState);\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env && import.meta.env.MODE) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn('[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.');\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  extension.subscribe((message) => {\n    var _a2;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\"[zustand devtools middleware] Unsupported action format\");\n          return;\n        }\n        return parseJsonThen(message.payload, (action) => {\n          if (action.type === \"__setState\") {\n            setStateFromDevtools(action.state);\n            return;\n          }\n          if (!api.dispatchFromDevtools)\n            return;\n          if (typeof api.dispatch !== \"function\")\n            return;\n          api.dispatch(action);\n        });\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            return extension.init(api.getState());\n          case \"COMMIT\":\n            return extension.init(api.getState());\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              setStateFromDevtools(state);\n              extension.init(api.getState());\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              setStateFromDevtools(state);\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a2 = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a2.state;\n            if (!lastComputedState)\n              return;\n            setStateFromDevtools(lastComputedState);\n            extension.send(null, nextLiftedState);\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\"[zustand devtools middleware] Could not parse the received json\", e);\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = __spreadValues({\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => __spreadValues(__spreadValues({}, currentState), persistedState)\n  }, baseOptions);\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config((...args) => {\n      console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`);\n      set(...args);\n    }, get, api);\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize(__spreadValues({}, get()));\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then((serializedValue) => storage.setItem(options.name, serializedValue)).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config((...args) => {\n    set(...args);\n    void setItem();\n  }, get, api);\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);\n          }\n          console.error(`State loaded from storage couldn't be migrated since no migrate function was provided`);\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(migratedState, (_a2 = get()) != null ? _a2 : configResult);\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = __spreadValues(__spreadValues({}, options), newOptions);\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, devtools, persist, redux, subscribeWithSelector };\n", "import { e as Connector, _ as _defineProperty, j as _classPrivateFieldInitSpec, n as normalizeChainId, k as _classPrivateFieldGet, l as _classPrivateFieldSet, c as ConnectorNotFoundError, U as UserRejectedRequestError, R as ResourceUnavailableError, f as ChainNotConfiguredError, A as AddChainError, i as SwitchChainError, m as _classPrivateMethodInitSpec, o as _classPrivateMethodGet } from './base-b565d5d4.esm.js';\nimport create from 'zustand/vanilla';\nimport { subscribeWithSelector, persist } from 'zustand/middleware';\nimport { providers } from 'ethers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\n\nfunction getInjectedName(ethereum) {\n  var _ethereum$providers, _getName;\n\n  if (!ethereum) return 'Injected';\n\n  const getName = provider => {\n    if (provider.isBraveWallet) return 'Brave Wallet';\n    if (provider.isCoinbaseWallet) return 'Coinbase Wallet';\n    if (provider.isExodus) return 'Exodus';\n    if (provider.isFrame) return 'Frame';\n    if (provider.isOpera) return 'Opera';\n    if (provider.isTally) return 'Tally';\n    if (provider.isTokenPocket) return 'TokenPocket';\n    if (provider.isTokenary) return 'Tokenary';\n    if (provider.isTrust) return 'Trust Wallet';\n    if (provider.isMetaMask) return 'MetaMask';\n  }; // Some injected providers detect multiple other providers and create a list at `ethers.providers`\n\n\n  if ((_ethereum$providers = ethereum.providers) !== null && _ethereum$providers !== void 0 && _ethereum$providers.length) {\n    var _names$;\n\n    // Deduplicate names using Set\n    // Coinbase Wallet puts multiple providers in `ethereum.providers`\n    const nameSet = new Set();\n    let unknownCount = 1;\n\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n\n      if (!name) {\n        name = \"Unknown Wallet #\".concat(unknownCount);\n        unknownCount += 1;\n      }\n\n      nameSet.add(name);\n    }\n\n    const names = [...nameSet];\n    if (names.length) return names;\n    return (_names$ = names[0]) !== null && _names$ !== void 0 ? _names$ : 'Injected';\n  }\n\n  return (_getName = getName(ethereum)) !== null && _getName !== void 0 ? _getName : 'Injected';\n}\n\nconst shimDisconnectKey = 'injected.shimDisconnect';\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _switchingChains = /*#__PURE__*/new WeakMap();\n\nclass InjectedConnector extends Connector {\n  constructor() {\n    let {\n      chains,\n      options = {\n        shimDisconnect: true\n      }\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super({\n      chains,\n      options\n    });\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"ready\", typeof window != 'undefined' && !!window.ethereum);\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _switchingChains, {\n      writable: true,\n      value: void 0\n    });\n\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit('change', {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    _defineProperty(this, \"onDisconnect\", () => {\n      var _this$options, _this$options2, _getClient$storage;\n\n      // We need this as MetaMask can emit the \"disconnect\" event\n      // upon switching chains. This workaround ensures that the\n      // user currently isn't in the process of switching chains.\n      if ((_this$options = this.options) !== null && _this$options !== void 0 && _this$options.shimChainChangedDisconnect && _classPrivateFieldGet(this, _switchingChains)) {\n        _classPrivateFieldSet(this, _switchingChains, false);\n\n        return;\n      }\n\n      this.emit('disconnect'); // Remove shim signalling wallet is disconnected\n\n      if ((_this$options2 = this.options) !== null && _this$options2 !== void 0 && _this$options2.shimDisconnect) (_getClient$storage = getClient().storage) === null || _getClient$storage === void 0 ? void 0 : _getClient$storage.removeItem(shimDisconnectKey);\n    });\n\n    let name = 'Injected';\n\n    if (typeof window !== 'undefined') {\n      const overrideName = options.name;\n      const detectedName = getInjectedName(window.ethereum);\n      if (overrideName) name = typeof overrideName === 'function' ? overrideName(detectedName) : overrideName;else name = typeof detectedName === 'string' ? detectedName : detectedName[0];\n    }\n\n    this.id = 'injected';\n    this.name = name;\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      var _this$options3, _getClient$storage2;\n\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n\n      if (provider.on) {\n        provider.on('accountsChanged', this.onAccountsChanged);\n        provider.on('chainChanged', this.onChainChanged);\n        provider.on('disconnect', this.onDisconnect);\n      }\n\n      this.emit('message', {\n        type: 'connecting'\n      });\n      const account = await this.getAccount(); // Switch to chain if provided\n\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      } // Add shim to storage signalling wallet is connected\n\n\n      if ((_this$options3 = this.options) !== null && _this$options3 !== void 0 && _this$options3.shimDisconnect) (_getClient$storage2 = getClient().storage) === null || _getClient$storage2 === void 0 ? void 0 : _getClient$storage2.setItem(shimDisconnectKey, true);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      if (error.code === -32002) throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    var _this$options4, _getClient$storage3;\n\n    const provider = await this.getProvider();\n    if (!(provider !== null && provider !== void 0 && provider.removeListener)) return;\n    provider.removeListener('accountsChanged', this.onAccountsChanged);\n    provider.removeListener('chainChanged', this.onChainChanged);\n    provider.removeListener('disconnect', this.onDisconnect); // Remove shim signalling wallet is disconnected\n\n    if ((_this$options4 = this.options) !== null && _this$options4 !== void 0 && _this$options4.shimDisconnect) (_getClient$storage3 = getClient().storage) === null || _getClient$storage3 === void 0 ? void 0 : _getClient$storage3.removeItem(shimDisconnectKey);\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: 'eth_requestAccounts'\n    }); // return checksum address\n\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return await provider.request({\n      method: 'eth_chainId'\n    }).then(normalizeChainId);\n  }\n\n  async getProvider() {\n    if (typeof window !== 'undefined' && !!window.ethereum) _classPrivateFieldSet(this, _provider, window.ethereum);\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  async getSigner() {\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      var _this$options5, _getClient$storage4;\n\n      if ((_this$options5 = this.options) !== null && _this$options5 !== void 0 && _this$options5.shimDisconnect && // If shim does not exist in storage, wallet is disconnected\n      !((_getClient$storage4 = getClient().storage) !== null && _getClient$storage4 !== void 0 && _getClient$storage4.getItem(shimDisconnectKey))) return false;\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      const accounts = await provider.request({\n        method: 'eth_accounts'\n      });\n      const account = accounts[0];\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n  async switchChain(chainId) {\n    var _this$options6;\n\n    if ((_this$options6 = this.options) !== null && _this$options6 !== void 0 && _this$options6.shimChainChangedDisconnect) _classPrivateFieldSet(this, _switchingChains, true);\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const id = hexValue(chainId);\n\n    try {\n      var _this$chains$find;\n\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: id\n        }]\n      });\n      return (_this$chains$find = this.chains.find(x => x.id === chainId)) !== null && _this$chains$find !== void 0 ? _this$chains$find : {\n        id: chainId,\n        name: \"Chain \".concat(id),\n        network: \"\".concat(id),\n        rpcUrls: {\n          default: ''\n        }\n      };\n    } catch (error) {\n      var _data, _data$originalError;\n\n      const chain = this.chains.find(x => x.id === chainId);\n      if (!chain) throw new ChainNotConfiguredError(); // Indicates chain is not added to provider\n\n      if (error.code === 4902 || // Unwrapping for MetaMask Mobile\n      // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n      (error === null || error === void 0 ? void 0 : (_data = error.data) === null || _data === void 0 ? void 0 : (_data$originalError = _data.originalError) === null || _data$originalError === void 0 ? void 0 : _data$originalError.code) === 4902) {\n        try {\n          var _chain$rpcUrls$public;\n\n          await provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [(_chain$rpcUrls$public = chain.rpcUrls.public) !== null && _chain$rpcUrls$public !== void 0 ? _chain$rpcUrls$public : chain.rpcUrls.default],\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (this.isUserRejectedRequestError(addError)) throw new UserRejectedRequestError(error);\n          throw new AddChainError();\n        }\n      }\n\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n\n  async watchAsset(_ref) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref;\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return await provider.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n\n}\n\nconst noopStorage = {\n  getItem: _key => '',\n  setItem: (_key, _value) => null,\n  removeItem: _key => null\n};\nfunction createStorage(_ref) {\n  let {\n    storage,\n    key: prefix = 'wagmi'\n  } = _ref;\n  return { ...storage,\n    getItem: function (key) {\n      let defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      const value = storage.getItem(\"\".concat(prefix, \".\").concat(key));\n\n      try {\n        return value ? JSON.parse(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(\"\".concat(prefix, \".\").concat(key));\n      } else {\n        try {\n          storage.setItem(\"\".concat(prefix, \".\").concat(key), JSON.stringify(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: key => storage.removeItem(\"\".concat(prefix, \".\").concat(key))\n  };\n}\n\nconst storeKey = 'store';\n\nvar _isAutoConnecting = /*#__PURE__*/new WeakMap();\n\nvar _lastUsedConnector = /*#__PURE__*/new WeakMap();\n\nvar _addEffects = /*#__PURE__*/new WeakSet();\n\nclass Client {\n  constructor(_ref) {\n    let {\n      autoConnect = false,\n      connectors = [new InjectedConnector()],\n      provider: _provider,\n      storage = createStorage({\n        storage: typeof window !== 'undefined' ? window.localStorage : noopStorage\n      }),\n      webSocketProvider: _webSocketProvider\n    } = _ref;\n\n    _classPrivateMethodInitSpec(this, _addEffects);\n\n    _defineProperty(this, \"config\", void 0);\n\n    _defineProperty(this, \"storage\", void 0);\n\n    _defineProperty(this, \"store\", void 0);\n\n    _classPrivateFieldInitSpec(this, _isAutoConnecting, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _lastUsedConnector, {\n      writable: true,\n      value: void 0\n    });\n\n    // Check status for autoConnect flag\n    let status = 'disconnected';\n\n    let _chainId;\n\n    if (autoConnect) {\n      try {\n        var _JSON$parse, _JSON$parse$state, _data$chain;\n\n        const rawState = storage.getItem(storeKey, '');\n        const data = (_JSON$parse = JSON.parse(rawState || '{}')) === null || _JSON$parse === void 0 ? void 0 : (_JSON$parse$state = _JSON$parse.state) === null || _JSON$parse$state === void 0 ? void 0 : _JSON$parse$state.data; // If account exists in localStorage, set status to reconnecting\n\n        status = data !== null && data !== void 0 && data.account ? 'reconnecting' : 'connecting';\n        _chainId = data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id; // eslint-disable-next-line no-empty\n      } catch (_error) {}\n    } // Create store\n\n\n    this.store = create(subscribeWithSelector(persist(() => ({\n      connectors: typeof connectors === 'function' ? connectors() : connectors,\n      provider: typeof _provider === 'function' ? _provider({\n        chainId: _chainId\n      }) : _provider,\n      status,\n      webSocketProvider: typeof _webSocketProvider === 'function' ? _webSocketProvider({\n        chainId: _chainId\n      }) : _webSocketProvider\n    }), {\n      name: storeKey,\n      getStorage: () => storage,\n      partialize: state => {\n        var _state$data, _state$data2;\n\n        return { ...(autoConnect && {\n            data: {\n              account: state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.account,\n              chain: state === null || state === void 0 ? void 0 : (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : _state$data2.chain\n            }\n          }),\n          chains: state === null || state === void 0 ? void 0 : state.chains\n        };\n      },\n      version: 1\n    })));\n    this.config = {\n      autoConnect,\n      connectors,\n      provider: _provider,\n      storage,\n      webSocketProvider: _webSocketProvider\n    };\n    this.storage = storage;\n\n    _classPrivateFieldSet(this, _lastUsedConnector, storage === null || storage === void 0 ? void 0 : storage.getItem('wallet'));\n\n    _classPrivateMethodGet(this, _addEffects, _addEffects2).call(this);\n  }\n\n  get chains() {\n    return this.store.getState().chains;\n  }\n\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n\n  get connector() {\n    return this.store.getState().connector;\n  }\n\n  get data() {\n    return this.store.getState().data;\n  }\n\n  get error() {\n    return this.store.getState().error;\n  }\n\n  get lastUsedChainId() {\n    var _this$data, _this$data$chain;\n\n    return (_this$data = this.data) === null || _this$data === void 0 ? void 0 : (_this$data$chain = _this$data.chain) === null || _this$data$chain === void 0 ? void 0 : _this$data$chain.id;\n  }\n\n  get provider() {\n    return this.store.getState().provider;\n  }\n\n  get status() {\n    return this.store.getState().status;\n  }\n\n  get subscribe() {\n    return this.store.subscribe;\n  }\n\n  get webSocketProvider() {\n    return this.store.getState().webSocketProvider;\n  }\n\n  setState(updater) {\n    const newState = typeof updater === 'function' ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n\n  clearState() {\n    this.setState(x => ({ ...x,\n      connector: undefined,\n      data: undefined,\n      error: undefined,\n      status: 'disconnected'\n    }));\n  }\n\n  async destroy() {\n    var _this$connector$disco, _this$connector;\n\n    if (this.connector) await ((_this$connector$disco = (_this$connector = this.connector).disconnect) === null || _this$connector$disco === void 0 ? void 0 : _this$connector$disco.call(_this$connector));\n\n    _classPrivateFieldSet(this, _isAutoConnecting, false);\n\n    this.clearState();\n    this.store.destroy();\n  }\n\n  async autoConnect() {\n    if (_classPrivateFieldGet(this, _isAutoConnecting)) return;\n\n    _classPrivateFieldSet(this, _isAutoConnecting, true);\n\n    if (!this.connectors.length) return; // Try last used connector first\n\n    const sorted = _classPrivateFieldGet(this, _lastUsedConnector) ? [...this.connectors].sort(x => x.id === _classPrivateFieldGet(this, _lastUsedConnector) ? -1 : 1) : this.connectors;\n    let connected = false;\n\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized) continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized) continue;\n      const data = await connector.connect();\n      this.setState(x => ({ ...x,\n        connector,\n        chains: connector === null || connector === void 0 ? void 0 : connector.chains,\n        data,\n        status: 'connected'\n      }));\n      connected = true;\n      break;\n    } // If connecting didn't succeed, set to disconnected\n\n\n    if (!connected) this.setState(x => ({ ...x,\n      data: undefined,\n      status: 'disconnected'\n    }));\n\n    _classPrivateFieldSet(this, _isAutoConnecting, false);\n\n    return this.data;\n  }\n\n  setLastUsedConnector() {\n    var _this$storage;\n\n    let lastUsedConnector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    (_this$storage = this.storage) === null || _this$storage === void 0 ? void 0 : _this$storage.setItem('wallet', lastUsedConnector);\n  }\n\n}\n\nfunction _addEffects2() {\n  const onChange = data => {\n    this.setState(x => ({ ...x,\n      data: { ...x.data,\n        ...data\n      }\n    }));\n  };\n\n  const onDisconnect = () => {\n    this.clearState();\n  };\n\n  const onError = error => {\n    this.setState(x => ({ ...x,\n      error\n    }));\n  };\n\n  this.store.subscribe(_ref2 => {\n    let {\n      connector\n    } = _ref2;\n    return connector;\n  }, (connector, prevConnector) => {\n    var _prevConnector$off, _prevConnector$off2, _prevConnector$off3, _connector$on, _connector$on2, _connector$on3;\n\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off = prevConnector.off) === null || _prevConnector$off === void 0 ? void 0 : _prevConnector$off.call(prevConnector, 'change', onChange);\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off2 = prevConnector.off) === null || _prevConnector$off2 === void 0 ? void 0 : _prevConnector$off2.call(prevConnector, 'disconnect', onDisconnect);\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off3 = prevConnector.off) === null || _prevConnector$off3 === void 0 ? void 0 : _prevConnector$off3.call(prevConnector, 'error', onError);\n    if (!connector) return;\n    (_connector$on = connector.on) === null || _connector$on === void 0 ? void 0 : _connector$on.call(connector, 'change', onChange);\n    (_connector$on2 = connector.on) === null || _connector$on2 === void 0 ? void 0 : _connector$on2.call(connector, 'disconnect', onDisconnect);\n    (_connector$on3 = connector.on) === null || _connector$on3 === void 0 ? void 0 : _connector$on3.call(connector, 'error', onError);\n  });\n  const {\n    provider,\n    webSocketProvider\n  } = this.config;\n  const subscribeProvider = typeof provider === 'function';\n  const subscribeWebSocketProvider = typeof webSocketProvider === 'function';\n  if (subscribeProvider || subscribeWebSocketProvider) this.store.subscribe(_ref3 => {\n    var _data$chain2;\n\n    let {\n      data\n    } = _ref3;\n    return data === null || data === void 0 ? void 0 : (_data$chain2 = data.chain) === null || _data$chain2 === void 0 ? void 0 : _data$chain2.id;\n  }, chainId => {\n    this.setState(x => ({ ...x,\n      provider: subscribeProvider ? provider({\n        chainId\n      }) : x.provider,\n      webSocketProvider: subscribeWebSocketProvider ? webSocketProvider({\n        chainId\n      }) : x.webSocketProvider\n    }));\n  });\n}\n\nlet client;\nfunction createClient(config) {\n  const client_ = new Client(config);\n  client = client_;\n  return client_;\n}\nfunction getClient() {\n  if (!client) {\n    throw new Error('No wagmi client found. Ensure you have set up a client: https://wagmi.sh/docs/client');\n  }\n\n  return client;\n}\n\nexport { Client as C, InjectedConnector as I, createStorage as a, createClient as c, getClient as g, noopStorage as n, shimDisconnectKey as s };\n", "import { g as getClient } from './client-a05fd511.esm.js';\nexport { C as Client, I as InjectedConnector, c as createClient, a as createStorage, n as noopStorage } from './client-a05fd511.esm.js';\nimport { C as ConnectorAlreadyConnectedError, P as ProviderChainsNotFound, a as ChainDoesNotSupportMulticallError, b as ContractMethodNoResultError, c as ConnectorNotFoundError, d as ChainMismatchError, U as UserRejectedRequestError, n as normalizeChainId, S as SwitchChainNotSupportedError } from './base-b565d5d4.esm.js';\nexport { A as AddChainError, a as ChainDoesNotSupportMulticallError, d as ChainMismatchError, f as ChainNotConfiguredError, e as Connector, C as ConnectorAlreadyConnectedError, c as ConnectorNotFoundError, b as ContractMethodNoResultError, P as ProviderChainsNotFound, g as ProviderRpcError, R as ResourceUnavailableError, h as RpcError, i as SwitchChainError, S as SwitchChainNotSupportedError, U as UserRejectedRequestError, n as normalizeChainId } from './base-b565d5d4.esm.js';\nimport { logger, Contract as Contract$1 } from 'ethers/lib/ethers';\nimport { isAddress, Logger, formatUnits, getAddress } from 'ethers/lib/utils';\nimport { providers, Contract } from 'ethers';\nimport shallow from 'zustand/shallow';\nexport { a as alchemyRpcUrls, i as infuraRpcUrls, p as publicRpcUrls } from './rpcs-b73a8f60.esm.js';\nexport { a as allChains, c as chain, b as chainId, d as defaultChains, e as defaultL2Chains, f as etherscanBlockExplorers } from './chains-fd2c546c.esm.js';\nimport 'zustand/vanilla';\nimport 'zustand/middleware';\nimport 'eventemitter3';\n\nfunction configureChains(defaultChains, providers) {\n  let {\n    minQuorum = 1,\n    targetQuorum = 1,\n    stallTimeout\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!defaultChains.length) throw new Error('must have at least one chain');\n  if (targetQuorum < minQuorum) throw new Error('quorum cannot be lower than minQuorum');\n  let chains = [];\n  const providers_ = {};\n  const webSocketProviders_ = {};\n\n  for (const chain of defaultChains) {\n    let configExists = false;\n\n    for (const provider of providers) {\n      const apiConfig = provider(chain); // If no API configuration was found (ie. no RPC URL) for\n      // this provider, then we skip and check the next one.\n\n      if (!apiConfig) continue;\n      configExists = true;\n\n      if (!chains.some(_ref => {\n        let {\n          id\n        } = _ref;\n        return id === chain.id;\n      })) {\n        chains = [...chains, apiConfig.chain];\n      }\n\n      providers_[chain.id] = [...(providers_[chain.id] || []), apiConfig.provider];\n\n      if (apiConfig.webSocketProvider) {\n        webSocketProviders_[chain.id] = [...(webSocketProviders_[chain.id] || []), apiConfig.webSocketProvider];\n      }\n    } // If no API configuration was found across the providers\n    // then we throw an error to the consumer.\n\n\n    if (!configExists) {\n      throw new Error([\"Could not find valid provider configuration for chain \\\"\".concat(chain.name, \"\\\".\\n\"), \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\", 'Read more: https://wagmi.sh/docs/providers/jsonRpc'].join('\\n'));\n    }\n  }\n\n  return {\n    chains,\n    provider: _ref2 => {\n      var _defaultChains$, _chainProviders$;\n\n      let {\n        chainId\n      } = _ref2;\n      const activeChainId = chainId && chains.some(x => x.id === chainId) ? chainId : (_defaultChains$ = defaultChains[0]) === null || _defaultChains$ === void 0 ? void 0 : _defaultChains$.id;\n      const chainProviders = providers_[activeChainId];\n      if (!chainProviders) throw new Error(\"No providers configured for chain \\\"\".concat(activeChainId, \"\\\"\"));\n      if (chainProviders.length === 1) return Object.assign(((_chainProviders$ = chainProviders[0]) === null || _chainProviders$ === void 0 ? void 0 : _chainProviders$.call(chainProviders)) || {}, {\n        chains\n      });\n      return Object.assign(fallbackProvider(targetQuorum, minQuorum, chainProviders, {\n        stallTimeout\n      }), {\n        chains\n      });\n    },\n    webSocketProvider: _ref3 => {\n      var _defaultChains$2, _chainWebSocketProvid;\n\n      let {\n        chainId\n      } = _ref3;\n      const activeChainId = chainId && chains.some(x => x.id === chainId) ? chainId : (_defaultChains$2 = defaultChains[0]) === null || _defaultChains$2 === void 0 ? void 0 : _defaultChains$2.id;\n      const chainWebSocketProviders = webSocketProviders_[activeChainId];\n      if (!chainWebSocketProviders) return undefined; // WebSockets do not work with `fallbackProvider`\n      // Default to first available\n\n      return Object.assign(((_chainWebSocketProvid = chainWebSocketProviders[0]) === null || _chainWebSocketProvid === void 0 ? void 0 : _chainWebSocketProvid.call(chainWebSocketProviders)) || {}, {\n        chains\n      });\n    }\n  };\n}\n\nfunction fallbackProvider(targetQuorum, minQuorum, providers_, _ref4) {\n  let {\n    stallTimeout\n  } = _ref4;\n\n  try {\n    return new providers.FallbackProvider(providers_.map((chainProvider, index) => {\n      var _provider$priority, _provider$stallTimeou;\n\n      const provider = chainProvider();\n      return {\n        provider,\n        priority: (_provider$priority = provider.priority) !== null && _provider$priority !== void 0 ? _provider$priority : index,\n        stallTimeout: (_provider$stallTimeou = provider.stallTimeout) !== null && _provider$stallTimeou !== void 0 ? _provider$stallTimeou : stallTimeout,\n        weight: provider.weight\n      };\n    }), targetQuorum);\n  } catch (error) {\n    var _error$message;\n\n    if (error !== null && error !== void 0 && (_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('quorum will always fail; larger than total weight')) {\n      if (targetQuorum === minQuorum) throw error;\n      return fallbackProvider(targetQuorum - 1, minQuorum, providers_, {\n        stallTimeout\n      });\n    }\n\n    throw error;\n  }\n}\n\n/** Forked from https://github.com/epoberezkin/fast-deep-equal */\nfunction deepEqual(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) return false;\n    let length;\n    let i;\n\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) if (!deepEqual(a[i], b[i])) return false;\n\n      return true;\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key])) return false;\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n\n\n  return a !== a && b !== b;\n}\n\n// https://ethereum.org/en/developers/docs/standards/tokens/erc-20\nconst erc20ABI = ['event Approval(address indexed _owner, address indexed _spender, uint256 _value)', 'event Transfer(address indexed _from, address indexed _to, uint256 _value)', 'function allowance(address _owner, address _spender) public view returns (uint256 remaining)', 'function approve(address _spender, uint256 _value) public returns (bool success)', 'function balanceOf(address _owner) public view returns (uint256 balance)', 'function decimals() public view returns (uint8)', 'function name() public view returns (string)', 'function symbol() public view returns (string)', 'function totalSupply() public view returns (uint256)', 'function transfer(address _to, uint256 _value) public returns (bool success)', 'function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)']; // https://ethereum.org/en/developers/docs/standards/tokens/erc-721\n\nconst erc721ABI = ['event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId)', 'event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved)', 'event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId)', 'function approve(address _approved, uint256 _tokenId) external payable', 'function balanceOf(address _owner) external view returns (uint256)', 'function getApproved(uint256 _tokenId) external view returns (address)', 'function isApprovedForAll(address _owner, address _operator) external view returns (bool)', 'function name() view returns (string memory)', 'function ownerOf(uint256 _tokenId) external view returns (address)', 'function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable', 'function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external payable', 'function setApprovalForAll(address _operator, bool _approved) external', 'function symbol() view returns (string memory)', 'function tokenByIndex(uint256 _index) view returns (uint256)', 'function tokenOfOwnerByIndex(address _owner, uint256 _index) view returns (uint256 tokenId)', 'function tokenURI(uint256 _tokenId) view returns (string memory)', 'function totalSupply() view returns (uint256)', 'function transferFrom(address _from, address _to, uint256 _tokenId) external payable'];\n\nconst multicallInterface = [{\n  inputs: [{\n    components: [{\n      internalType: 'address',\n      name: 'target',\n      type: 'address'\n    }, {\n      internalType: 'bool',\n      name: 'allowFailure',\n      type: 'bool'\n    }, {\n      internalType: 'bytes',\n      name: 'callData',\n      type: 'bytes'\n    }],\n    internalType: 'struct Multicall3.Call3[]',\n    name: 'calls',\n    type: 'tuple[]'\n  }],\n  name: 'aggregate3',\n  outputs: [{\n    components: [{\n      internalType: 'bool',\n      name: 'success',\n      type: 'bool'\n    }, {\n      internalType: 'bytes',\n      name: 'returnData',\n      type: 'bytes'\n    }],\n    internalType: 'struct Multicall3.Result[]',\n    name: 'returnData',\n    type: 'tuple[]'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}];\n\n// https://github.com/ethers-io/ethers.js/blob/master/packages/units/src.ts/index.ts#L10-L18\nconst units = ['wei', 'kwei', 'mwei', 'gwei', 'szabo', 'finney', 'ether'];\n\nasync function connect(_ref) {\n  let {\n    chainId,\n    connector\n  } = _ref;\n  const client = getClient();\n  const activeConnector = client.connector;\n  if (connector.id === (activeConnector === null || activeConnector === void 0 ? void 0 : activeConnector.id)) throw new ConnectorAlreadyConnectedError();\n\n  try {\n    client.setState(x => ({ ...x,\n      status: 'connecting'\n    }));\n    const data = await connector.connect({\n      chainId\n    });\n    client.setLastUsedConnector(connector.id);\n    client.setState(x => ({ ...x,\n      connector,\n      chains: connector === null || connector === void 0 ? void 0 : connector.chains,\n      data,\n      status: 'connected'\n    }));\n    client.storage.setItem('connected', true);\n    return { ...data,\n      connector\n    };\n  } catch (err) {\n    client.setState(x => ({ ...x,\n      status: 'disconnected'\n    }));\n    throw err;\n  }\n}\n\nasync function disconnect() {\n  const client = getClient();\n  if (client.connector) await client.connector.disconnect();\n  client.clearState();\n  client.storage.removeItem('connected');\n}\n\nfunction getContract(_ref) {\n  let {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref;\n  return new Contract(addressOrName, contractInterface, signerOrProvider);\n}\n\nfunction getProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = getClient();\n  if (chainId && typeof client.config.provider === 'function') return client.config.provider({\n    chainId\n  });\n  return client.provider;\n}\n\nfunction getWebSocketProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = getClient();\n  if (chainId && typeof client.config.webSocketProvider === 'function') return client.config.webSocketProvider({\n    chainId\n  });\n  return client.webSocketProvider;\n}\n\nfunction watchProvider(args, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(getProvider(args));\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider\n    } = _ref;\n    return provider;\n  }, handleChange);\n  return unsubscribe;\n}\n\nfunction watchWebSocketProvider(args, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(getWebSocketProvider(args));\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      webSocketProvider\n    } = _ref;\n    return webSocketProvider;\n  }, handleChange);\n  return unsubscribe;\n}\n\nasync function readContract(_ref) {\n  let {\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const contract = getContract({\n    addressOrName,\n    contractInterface,\n    signerOrProvider: provider\n  });\n  const params = [...(Array.isArray(args) ? args : args ? [args] : []), ...(overrides ? [overrides] : [])];\n  const contractFunction = contract[functionName];\n  if (!contractFunction) console.warn(\"\\\"\".concat(functionName, \"\\\" is not in the interface for contract \\\"\").concat(addressOrName, \"\\\"\"));\n  const response = await (contractFunction === null || contractFunction === void 0 ? void 0 : contractFunction(...params));\n  return response;\n}\n\nasync function multicall(_ref) {\n  let {\n    allowFailure = true,\n    chainId,\n    contracts,\n    overrides\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  if (!provider.chains) throw new ProviderChainsNotFound();\n  const chain = provider.chains.find(chain => chain.id === chainId) || provider.chains[0];\n  if (!chain) throw new ProviderChainsNotFound();\n  if (!(chain !== null && chain !== void 0 && chain.multicall)) throw new ChainDoesNotSupportMulticallError({\n    chain\n  });\n  if (typeof (overrides === null || overrides === void 0 ? void 0 : overrides.blockTag) === 'number' && (overrides === null || overrides === void 0 ? void 0 : overrides.blockTag) < chain.multicall.blockCreated) throw new ChainDoesNotSupportMulticallError({\n    blockNumber: overrides === null || overrides === void 0 ? void 0 : overrides.blockTag,\n    chain\n  });\n  const multicallContract = getContract({\n    addressOrName: chain.multicall.address,\n    contractInterface: multicallInterface,\n    signerOrProvider: provider\n  });\n  const calls = contracts.map(_ref2 => {\n    let {\n      addressOrName,\n      contractInterface,\n      functionName,\n      ...config\n    } = _ref2;\n    const {\n      args\n    } = config || {};\n    const contract = getContract({\n      addressOrName,\n      contractInterface\n    });\n    const params = Array.isArray(args) ? args : args ? [args] : [];\n    const callData = contract.interface.encodeFunctionData(functionName, params);\n    if (!contract[functionName]) console.warn(\"\\\"\".concat(functionName, \"\\\" is not in the interface for contract \\\"\").concat(addressOrName, \"\\\"\"));\n    return {\n      target: addressOrName,\n      allowFailure,\n      callData\n    };\n  });\n  const params = [...[calls], ...(overrides ? [overrides] : [])];\n  const results = await multicallContract.aggregate3(...params);\n  return results.map((_ref3, i) => {\n    let {\n      returnData,\n      success\n    } = _ref3;\n    if (!success) return null;\n    const {\n      addressOrName,\n      contractInterface,\n      functionName\n    } = contracts[i];\n\n    if (returnData === '0x') {\n      var _chain$blockExplorers;\n\n      const err = new ContractMethodNoResultError({\n        addressOrName,\n        blockExplorer: (_chain$blockExplorers = chain.blockExplorers) === null || _chain$blockExplorers === void 0 ? void 0 : _chain$blockExplorers.default,\n        functionName\n      });\n      if (!allowFailure) throw err;\n      console.warn(err.message);\n      return null;\n    }\n\n    const contract = getContract({\n      addressOrName,\n      contractInterface\n    });\n\n    try {\n      const result = contract.interface.decodeFunctionResult(functionName, returnData);\n      return Array.isArray(result) && result.length === 1 ? result[0] : result;\n    } catch (err) {\n      if (!allowFailure) throw err;\n      return null;\n    }\n  });\n}\n\nasync function readContracts(_ref) {\n  let {\n    allowFailure = true,\n    contracts,\n    overrides\n  } = _ref;\n\n  try {\n    const provider = getProvider();\n    const contractsByChainId = contracts.reduce((contracts, contract) => {\n      var _contract$chainId;\n\n      const chainId = (_contract$chainId = contract.chainId) !== null && _contract$chainId !== void 0 ? _contract$chainId : provider.network.chainId;\n      return { ...contracts,\n        [chainId]: [...(contracts[chainId] || []), contract]\n      };\n    }, {});\n    const promises = Object.entries(contractsByChainId).map(_ref2 => {\n      let [chainId, contracts] = _ref2;\n      return multicall({\n        allowFailure,\n        chainId: parseInt(chainId),\n        contracts,\n        overrides\n      });\n    });\n\n    if (allowFailure) {\n      return (await Promise.allSettled(promises)).map(result => {\n        if (result.status === 'fulfilled') return result.value;\n\n        if (result.reason instanceof ChainDoesNotSupportMulticallError) {\n          console.warn(result.reason.message);\n          throw result.reason;\n        }\n\n        return null;\n      }).flat();\n    }\n\n    return (await Promise.all(promises)).flat();\n  } catch (err) {\n    if (err instanceof ContractMethodNoResultError) throw err;\n    const promises = contracts.map(contract => readContract({ ...contract,\n      overrides\n    }));\n\n    if (allowFailure) {\n      return (await Promise.allSettled(promises)).map(result => result.status === 'fulfilled' ? result.value : null);\n    }\n\n    return await Promise.all(promises);\n  }\n}\n\nfunction watchContractEvent(\n/** Contract configuration */\ncontractArgs,\n/** Event name to listen to */\neventName, callback) {\n  let {\n    chainId,\n    once\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let contract;\n\n  const watchEvent = async () => {\n    if (contract) {\n      var _contract;\n\n      (_contract = contract) === null || _contract === void 0 ? void 0 : _contract.off(eventName, callback);\n    }\n\n    contract = getContract({\n      signerOrProvider: getWebSocketProvider({\n        chainId\n      }) || getProvider({\n        chainId\n      }),\n      ...contractArgs\n    });\n    if (once) contract.once(eventName, callback);else contract.on(eventName, callback);\n  };\n\n  watchEvent();\n  const client = getClient();\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, watchEvent, {\n    equalityFn: shallow\n  });\n  return () => {\n    var _contract2;\n\n    (_contract2 = contract) === null || _contract2 === void 0 ? void 0 : _contract2.off(eventName, callback);\n    unsubscribe();\n  };\n}\n\nasync function fetchBlockNumber() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const blockNumber = await provider.getBlockNumber();\n  return blockNumber;\n}\n\nfunction watchBlockNumber(args, callback) {\n  var _client$webSocketProv;\n\n  let previousProvider;\n\n  const createListener = provider => {\n    if (previousProvider) {\n      var _previousProvider;\n\n      (_previousProvider = previousProvider) === null || _previousProvider === void 0 ? void 0 : _previousProvider.off('block', callback);\n    }\n\n    provider.on('block', callback);\n    previousProvider = provider;\n  };\n\n  const client = getClient();\n  const provider_ = (_client$webSocketProv = client.webSocketProvider) !== null && _client$webSocketProv !== void 0 ? _client$webSocketProv : client.provider;\n  if (args.listen) createListener(provider_);\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, async _ref2 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref2;\n    const provider_ = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider;\n\n    if (args.listen && provider_) {\n      createListener(provider_);\n    }\n\n    callback(await fetchBlockNumber());\n  }, {\n    equalityFn: shallow\n  });\n  return () => {\n    unsubscribe();\n    provider_ === null || provider_ === void 0 ? void 0 : provider_.off('block', callback);\n  };\n}\n\nfunction watchReadContract(config, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(await readContract(config));\n\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : undefined;\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider\n    } = _ref;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch === null || unwatch === void 0 ? void 0 : unwatch();\n  };\n}\n\nfunction watchReadContracts(config, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(await readContracts(config));\n\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : undefined;\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider\n    } = _ref;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch === null || unwatch === void 0 ? void 0 : unwatch();\n  };\n}\n\nasync function writeContract(_ref) {\n  let {\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides,\n    signerOrProvider\n  } = _ref;\n  const {\n    connector\n  } = getClient();\n  if (!connector) throw new ConnectorNotFoundError();\n  const params = [...(Array.isArray(args) ? args : args ? [args] : []), ...(overrides ? [overrides] : [])];\n\n  try {\n    var _chain;\n\n    let chain;\n\n    if (chainId) {\n      const activeChainId = await connector.getChainId(); // Try to switch chain to provided `chainId`\n\n      if (chainId !== activeChainId) {\n        var _connector$chains$fin, _connector$chains$fin2, _connector$chains$fin3, _connector$chains$fin4;\n\n        if (connector.switchChain) chain = await connector.switchChain(chainId);else throw new ChainMismatchError({\n          activeChain: (_connector$chains$fin = (_connector$chains$fin2 = connector.chains.find(x => x.id === activeChainId)) === null || _connector$chains$fin2 === void 0 ? void 0 : _connector$chains$fin2.name) !== null && _connector$chains$fin !== void 0 ? _connector$chains$fin : \"Chain \".concat(activeChainId),\n          targetChain: (_connector$chains$fin3 = (_connector$chains$fin4 = connector.chains.find(x => x.id === chainId)) === null || _connector$chains$fin4 === void 0 ? void 0 : _connector$chains$fin4.name) !== null && _connector$chains$fin3 !== void 0 ? _connector$chains$fin3 : \"Chain \".concat(chainId)\n        });\n      }\n    }\n\n    const signer = await connector.getSigner({\n      chainId: (_chain = chain) === null || _chain === void 0 ? void 0 : _chain.id\n    });\n    const contract = getContract({\n      addressOrName,\n      contractInterface,\n      signerOrProvider\n    });\n    const contractWithSigner = contract.connect(signer);\n    const contractFunction = contractWithSigner[functionName];\n    if (!contractFunction) console.warn(\"\\\"\".concat(functionName, \"\\\" does not exist in interface for contract \\\"\").concat(addressOrName, \"\\\"\"));\n    return await contractFunction(...params);\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function fetchBalance(_ref) {\n  var _client$chains, _chain$nativeCurrency, _chain$nativeCurrency2, _chain$nativeCurrency3, _chain$nativeCurrency4;\n\n  let {\n    addressOrName,\n    chainId,\n    formatUnits: unit = 'ether',\n    token\n  } = _ref;\n  const client = getClient();\n  const provider = getProvider({\n    chainId\n  });\n\n  if (token) {\n    const erc20Config = {\n      addressOrName: token,\n      contractInterface: erc20ABI,\n      chainId\n    }; // Convert ENS name to address if required\n\n    let resolvedAddress;\n    if (isAddress(addressOrName)) resolvedAddress = addressOrName;else {\n      const address = await provider.resolveName(addressOrName); // Same error `provider.getBalance` throws for invalid ENS name\n\n      if (!address) logger.throwError('ENS name not configured', Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"resolveName(\".concat(JSON.stringify(addressOrName), \")\")\n      });\n      resolvedAddress = address;\n    }\n    const [value, decimals, symbol] = await readContracts({\n      allowFailure: false,\n      contracts: [{ ...erc20Config,\n        functionName: 'balanceOf',\n        args: resolvedAddress\n      }, { ...erc20Config,\n        functionName: 'decimals'\n      }, { ...erc20Config,\n        functionName: 'symbol'\n      }]\n    });\n    return {\n      decimals,\n      formatted: formatUnits(value !== null && value !== void 0 ? value : '0', unit),\n      symbol,\n      unit,\n      value\n    };\n  }\n\n  const chains = [...(client.provider.chains || []), ...((_client$chains = client.chains) !== null && _client$chains !== void 0 ? _client$chains : [])];\n  const value = await provider.getBalance(addressOrName);\n  const chain = chains.find(x => x.id === provider.network.chainId);\n  return {\n    decimals: (_chain$nativeCurrency = chain === null || chain === void 0 ? void 0 : (_chain$nativeCurrency2 = chain.nativeCurrency) === null || _chain$nativeCurrency2 === void 0 ? void 0 : _chain$nativeCurrency2.decimals) !== null && _chain$nativeCurrency !== void 0 ? _chain$nativeCurrency : 18,\n    formatted: formatUnits(value !== null && value !== void 0 ? value : '0', unit),\n    symbol: (_chain$nativeCurrency3 = chain === null || chain === void 0 ? void 0 : (_chain$nativeCurrency4 = chain.nativeCurrency) === null || _chain$nativeCurrency4 === void 0 ? void 0 : _chain$nativeCurrency4.symbol) !== null && _chain$nativeCurrency3 !== void 0 ? _chain$nativeCurrency3 : 'ETH',\n    unit,\n    value\n  };\n}\n\nasync function fetchSigner() {\n  var _client$connector, _client$connector$get;\n\n  const client = getClient();\n  const signer = (await ((_client$connector = client.connector) === null || _client$connector === void 0 ? void 0 : (_client$connector$get = _client$connector.getSigner) === null || _client$connector$get === void 0 ? void 0 : _client$connector$get.call(_client$connector))) || null;\n  return signer;\n}\n\nfunction getAccount() {\n  const {\n    data,\n    connector,\n    status\n  } = getClient();\n\n  switch (status) {\n    case 'connected':\n      return {\n        address: data === null || data === void 0 ? void 0 : data.account,\n        connector: connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n\n    case 'reconnecting':\n      return {\n        address: data === null || data === void 0 ? void 0 : data.account,\n        connector,\n        isConnected: !!(data !== null && data !== void 0 && data.account),\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n\n    case 'connecting':\n      return {\n        address: undefined,\n        connector: undefined,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n\n    case 'disconnected':\n      return {\n        address: undefined,\n        connector: undefined,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\nfunction getNetwork() {\n  var _client$data, _client$data$chain, _client$chains, _find, _client$data2;\n\n  const client = getClient();\n  const chainId = (_client$data = client.data) === null || _client$data === void 0 ? void 0 : (_client$data$chain = _client$data.chain) === null || _client$data$chain === void 0 ? void 0 : _client$data$chain.id;\n  const activeChains = (_client$chains = client.chains) !== null && _client$chains !== void 0 ? _client$chains : [];\n  const activeChain = (_find = [...(client.provider.chains || []), ...activeChains].find(x => x.id === chainId)) !== null && _find !== void 0 ? _find : {\n    id: chainId,\n    name: \"Chain \".concat(chainId),\n    network: \"\".concat(chainId),\n    rpcUrls: {\n      default: ''\n    }\n  };\n  return {\n    chain: chainId ? { ...activeChain,\n      ...((_client$data2 = client.data) === null || _client$data2 === void 0 ? void 0 : _client$data2.chain),\n      id: chainId\n    } : undefined,\n    chains: activeChains\n  };\n}\n\nasync function signMessage(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer) throw new ConnectorNotFoundError();\n    return await signer.signMessage(args.message);\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function signTypedData(_ref) {\n  let {\n    domain,\n    types,\n    value\n  } = _ref;\n  const {\n    connector\n  } = getClient();\n  if (!connector) throw new ConnectorNotFoundError();\n\n  try {\n    var _chain;\n\n    const {\n      chainId\n    } = domain;\n    let chain;\n\n    if (chainId) {\n      const chainId_ = normalizeChainId(chainId);\n      const activeChainId = await connector.getChainId(); // Try to switch chain to provided `chainId`\n\n      if (chainId !== activeChainId) {\n        var _connector$chains$fin, _connector$chains$fin2, _connector$chains$fin3, _connector$chains$fin4;\n\n        if (connector.switchChain) chain = await connector.switchChain(chainId_);else throw new ChainMismatchError({\n          activeChain: (_connector$chains$fin = (_connector$chains$fin2 = connector.chains.find(x => x.id === activeChainId)) === null || _connector$chains$fin2 === void 0 ? void 0 : _connector$chains$fin2.name) !== null && _connector$chains$fin !== void 0 ? _connector$chains$fin : \"Chain \".concat(activeChainId),\n          targetChain: (_connector$chains$fin3 = (_connector$chains$fin4 = connector.chains.find(x => x.id === chainId_)) === null || _connector$chains$fin4 === void 0 ? void 0 : _connector$chains$fin4.name) !== null && _connector$chains$fin3 !== void 0 ? _connector$chains$fin3 : \"Chain \".concat(chainId_)\n        });\n      }\n    }\n\n    const signer = await connector.getSigner({\n      chainId: (_chain = chain) === null || _chain === void 0 ? void 0 : _chain.id\n    }); // Method name may be changed in the future, see https://docs.ethers.io/v5/api/signer/#Signer-signTypedData\n\n    return await signer._signTypedData(domain, types, value);\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function switchNetwork(_ref) {\n  let {\n    chainId\n  } = _ref;\n  const {\n    connector\n  } = getClient();\n  if (!connector) throw new ConnectorNotFoundError();\n  if (!connector.switchChain) throw new SwitchChainNotSupportedError({\n    connector\n  });\n  return await connector.switchChain(chainId);\n}\n\nfunction watchAccount(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const client = getClient();\n\n  const handleChange = () => callback(getAccount());\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      data,\n      connector,\n      status\n    } = _ref;\n    return selector({\n      address: data === null || data === void 0 ? void 0 : data.account,\n      connector,\n      status\n    });\n  }, handleChange, {\n    equalityFn: shallow\n  });\n  return unsubscribe;\n}\n\nfunction watchNetwork(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const client = getClient();\n\n  const handleChange = () => callback(getNetwork());\n\n  const unsubscribe = client.subscribe(_ref => {\n    var _data$chain;\n\n    let {\n      data,\n      chains\n    } = _ref;\n    return selector({\n      chainId: data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id,\n      chains\n    });\n  }, handleChange, {\n    equalityFn: shallow\n  });\n  return unsubscribe;\n}\n\nfunction watchSigner(callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(await fetchSigner());\n\n  const unsubscribe = client.subscribe(_ref => {\n    var _data$chain;\n\n    let {\n      data,\n      connector\n    } = _ref;\n    return {\n      account: data === null || data === void 0 ? void 0 : data.account,\n      chainId: data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id,\n      connector\n    };\n  }, handleChange, {\n    equalityFn: shallow\n  });\n  return unsubscribe;\n}\n\nasync function fetchEnsAddress(_ref) {\n  let {\n    chainId,\n    name\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const address = await provider.resolveName(name);\n\n  try {\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\nasync function fetchEnsAvatar(_ref) {\n  let {\n    addressOrName,\n    chainId\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  }); // TODO: Update with more advanced logic\n  // https://github.com/ensdomains/ens-avatar\n\n  const avatar = await provider.getAvatar(addressOrName);\n  return avatar;\n}\n\nasync function fetchEnsName(_ref) {\n  let {\n    address,\n    chainId\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  return await provider.lookupAddress(address);\n}\n\nasync function fetchEnsResolver(_ref) {\n  let {\n    chainId,\n    name\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const resolver = await provider.getResolver(name);\n  return resolver;\n}\n\nasync function fetchFeeData() {\n  let {\n    chainId,\n    formatUnits: units = 'wei'\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const feeData = await provider.getFeeData();\n  const formatted = {\n    gasPrice: feeData.gasPrice ? formatUnits(feeData.gasPrice, units) : null,\n    maxFeePerGas: feeData.maxFeePerGas ? formatUnits(feeData.maxFeePerGas, units) : null,\n    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? formatUnits(feeData.maxPriorityFeePerGas, units) : null\n  };\n  return { ...feeData,\n    formatted\n  };\n}\n\nasync function fetchToken(_ref) {\n  let {\n    address,\n    chainId,\n    formatUnits: units = 'ether'\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const contract = new Contract$1(address, erc20ABI, provider);\n  const [symbol, decimals, totalSupply] = await Promise.all([contract.symbol(), contract.decimals(), contract.totalSupply()]);\n  const token = {\n    address,\n    decimals,\n    symbol,\n    totalSupply: {\n      formatted: formatUnits(totalSupply, units),\n      value: totalSupply\n    }\n  };\n  return token;\n}\n\nasync function sendTransaction(_ref) {\n  let {\n    chainId,\n    request\n  } = _ref;\n  const {\n    connector\n  } = getClient();\n  if (!connector) throw new ConnectorNotFoundError();\n\n  try {\n    var _chain;\n\n    let chain;\n\n    if (chainId) {\n      const activeChainId = await connector.getChainId(); // Try to switch chain to provided `chainId`\n\n      if (chainId !== activeChainId) {\n        var _connector$chains$fin, _connector$chains$fin2, _connector$chains$fin3, _connector$chains$fin4;\n\n        if (connector.switchChain) chain = await connector.switchChain(chainId);else throw new ChainMismatchError({\n          activeChain: (_connector$chains$fin = (_connector$chains$fin2 = connector.chains.find(x => x.id === activeChainId)) === null || _connector$chains$fin2 === void 0 ? void 0 : _connector$chains$fin2.name) !== null && _connector$chains$fin !== void 0 ? _connector$chains$fin : \"Chain \".concat(activeChainId),\n          targetChain: (_connector$chains$fin3 = (_connector$chains$fin4 = connector.chains.find(x => x.id === chainId)) === null || _connector$chains$fin4 === void 0 ? void 0 : _connector$chains$fin4.name) !== null && _connector$chains$fin3 !== void 0 ? _connector$chains$fin3 : \"Chain \".concat(chainId)\n        });\n      }\n    }\n\n    const signer = await connector.getSigner({\n      chainId: (_chain = chain) === null || _chain === void 0 ? void 0 : _chain.id\n    });\n    return await signer.sendTransaction(request);\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function waitForTransaction(_ref) {\n  let {\n    chainId,\n    confirmations,\n    hash,\n    timeout,\n    wait: wait_\n  } = _ref;\n  let promise;\n\n  if (hash) {\n    const provider = getProvider({\n      chainId\n    });\n    promise = provider.waitForTransaction(hash, confirmations, timeout);\n  } else if (wait_) promise = wait_(confirmations);else throw new Error('hash or wait is required');\n\n  return await promise;\n}\n\nexport { configureChains, connect, deepEqual, disconnect, erc20ABI, erc721ABI, fetchBalance, fetchBlockNumber, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, fetchFeeData, fetchSigner, fetchToken, getAccount, getContract, getNetwork, getProvider, getWebSocketProvider, readContract, readContracts, sendTransaction, signMessage, signTypedData, switchNetwork, units, waitForTransaction, watchAccount, watchBlockNumber, watchContractEvent, watchNetwork, watchProvider, watchReadContract, watchReadContracts, watchSigner, watchWebSocketProvider, writeContract };\n", "function shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { shallow as default };\n", "import * as React from 'react';\nimport { createClient as createClient$1, getProvider, watchProvider, getWebSocketProvider, watchWebSocketProvider, fetchBlockNumber, fetchFeeData, deepEqual, getAccount, watchAccount, fetchBalance, connect, disconnect, getNetwork, watchNetwork, watchSigner, fetchSigner, signMessage, signTypedData, switchNetwork, getContract, readContracts, readContract, writeContract, fetchToken, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, sendTransaction, waitForTransaction } from '@wagmi/core';\nexport { AddChainError, ChainDoesNotSupportMulticallError, ChainMismatchError, ChainNotConfiguredError, Client, Connector, ConnectorAlreadyConnectedError, ConnectorNotFoundError, ContractMethodNoResultError, ProviderChainsNotFound, ProviderRpcError, ResourceUnavailableError, RpcError, SwitchChainError, SwitchChainNotSupportedError, UserRejectedRequestError, alchemyRpcUrls, allChains, chain, chainId, configureChains, createStorage, deepEqual, defaultChains, defaultL2Chains, erc20ABI, erc721ABI, etherscanBlockExplorers, infuraRpcUrls, publicRpcUrls, readContracts } from '@wagmi/core';\nimport { QueryClient, QueryClientProvider, useQueryClient, useIsRestoring, useQueryErrorResetBoundary, notifyManager, InfiniteQueryObserver, QueryObserver, useMutation, hashQueryKey } from 'react-query';\nimport { persistQueryClient } from 'react-query/persistQueryClient';\nimport { createWebStoragePersister } from 'react-query/createWebStoragePersister';\nimport { BigNumber, Contract } from 'ethers/lib/ethers';\nimport * as pkg from 'use-sync-external-store/shim/index.js';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js';\n\nconst findAndReplace = (cacheRef, _ref) => {\n  let {\n    find,\n    replace\n  } = _ref;\n\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n\n  if (typeof cacheRef !== 'object') {\n    return cacheRef;\n  }\n\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map(item => findAndReplace(item, {\n      find,\n      replace\n    }));\n  }\n\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce((curr, _ref2) => {\n      let [key, value] = _ref2;\n      return { ...curr,\n        [key]: findAndReplace(value, {\n          find,\n          replace\n        })\n      };\n    }, {});\n  }\n\n  return cacheRef;\n};\n\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigNumbers = findAndReplace(cache, {\n    find: data => data.type === 'BigNumber',\n    replace: data => BigNumber.from(data.hex)\n  });\n  return deserializedCacheWithBigNumbers;\n}\n\nfunction isPlainArray(value) {\n  return Array.isArray(value) && Object.keys(value).length === value.length;\n}\n\nfunction parseContractResult(_ref) {\n  let {\n    contractInterface,\n    data,\n    functionName\n  } = _ref;\n\n  if (data && isPlainArray(data)) {\n    var _fragment$outputs, _fragment$outputs$, _fragment$outputs2, _fragment$outputs2$;\n\n    const iface = Contract.getInterface(contractInterface);\n    const fragment = iface.getFunction(functionName);\n    const isArray = (fragment === null || fragment === void 0 ? void 0 : (_fragment$outputs = fragment.outputs) === null || _fragment$outputs === void 0 ? void 0 : (_fragment$outputs$ = _fragment$outputs[0]) === null || _fragment$outputs$ === void 0 ? void 0 : _fragment$outputs$.baseType) === 'array' || (fragment === null || fragment === void 0 ? void 0 : (_fragment$outputs2 = fragment.outputs) === null || _fragment$outputs2 === void 0 ? void 0 : (_fragment$outputs2$ = _fragment$outputs2[0]) === null || _fragment$outputs2$ === void 0 ? void 0 : _fragment$outputs2$.baseType) === 'tuple';\n    const data_ = isArray ? [data] : data;\n    const encodedResult = iface.encodeFunctionResult(functionName, data_);\n    const decodedResult = iface.decodeFunctionResult(functionName, encodedResult);\n    return isArray ? decodedResult[0] : decodedResult;\n  }\n\n  return data;\n}\n\n/**\n * @function getReferenceKey\n *\n * @description\n * get the reference key for the circular value\n *\n * @param keys the keys to build the reference key from\n * @param cutoff the maximum number of keys to include\n * @returns the reference key\n */\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join('.') || '.';\n}\n/**\n * @function getCutoff\n *\n * @description\n * faster `Array.prototype.indexOf` implementation build for slicing / splicing\n *\n * @param array the array to match the value in\n * @param value the value to match\n * @returns the matching index, or -1\n */\n\n\nfunction getCutoff(array, value) {\n  const {\n    length\n  } = array;\n\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * @function createReplacer\n *\n * @description\n * create a replacer method that handles circular values\n *\n * @param [replacer] a custom replacer to use for non-circular values\n * @param [circularReplacer] a custom replacer to use for circular methods\n * @returns the value to stringify\n */\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === 'function';\n  const hasCircularReplacer = typeof circularReplacer === 'function';\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === 'object') {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff)) : \"[ref=\".concat(getReferenceKey(keys, valueCutoff), \"]\");\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\n/**\n * @function stringify\n *\n * @description\n * stringifier that handles circular values\n * Forked from https://github.com/planttheidea/fast-stringify\n *\n * @param value to stringify\n * @param [replacer] a custom replacer function for handling standard values\n * @param [indent] the number of spaces to indent the output by\n * @param [circularReplacer] a custom replacer function for handling circular values\n * @returns the stringified output\n */\n\n\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(value, createReplacer(replacer, circularReplacer), indent !== null && indent !== void 0 ? indent : undefined);\n}\n\nfunction createClient(_ref) {\n  let {\n    queryClient = new QueryClient({\n      defaultOptions: {\n        queries: {\n          cacheTime: 1000 * 60 * 60 * 24,\n          // 24 hours\n          networkMode: 'offlineFirst',\n          refetchOnWindowFocus: false,\n          retry: 0\n        },\n        mutations: {\n          networkMode: 'offlineFirst'\n        }\n      }\n    }),\n    persister = typeof window !== 'undefined' ? createWebStoragePersister({\n      key: 'wagmi.cache',\n      storage: window.localStorage,\n      serialize,\n      deserialize\n    }) : undefined,\n    ...config\n  } = _ref;\n  const client = createClient$1(config);\n  if (persister) persistQueryClient({\n    queryClient,\n    persister,\n    dehydrateOptions: {\n      shouldDehydrateQuery: query => query.cacheTime !== 0\n    }\n  });\n  return Object.assign(client, {\n    queryClient\n  });\n}\nconst Context = /*#__PURE__*/React.createContext(undefined);\nfunction WagmiConfig(_ref2) {\n  let {\n    children,\n    client\n  } = _ref2;\n  // Attempt to connect on mount\n  React.useEffect(() => {\n\n    (async () => {\n      if (!client.config.autoConnect) return;\n      await client.autoConnect();\n    })(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, /*#__PURE__*/React.createElement(QueryClientProvider, {\n    client: client.queryClient\n  }, children));\n}\nfunction useClient() {\n  const client = React.useContext(Context);\n  if (!client) throw new Error(['`useClient` must be used within `WagmiConfig`.\\n', 'Read more: https://wagmi.sh/docs/WagmiConfig'].join('\\n'));\n  return client;\n}\n\nconst useSyncExternalStore = pkg.useSyncExternalStore;\n\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\n\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\nfunction shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\nfunction trackResult(result, observer) {\n  const trackedResult = {};\n  Object.keys(result).forEach(key => {\n    Object.defineProperty(trackedResult, key, {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        // @ts-expect-error \u2013 aware we are mutating private `trackedProps` property.\n        observer.trackedProps.add(key);\n        return result[key];\n      }\n    });\n  });\n  return trackedResult;\n}\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  const [observer] = React.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(React.useCallback(onStoreChange => isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading && result.isFetching && !isRestoring) {\n    throw observer.fetchOptimistic(defaultedOptions).then(_ref => {\n      var _defaultedOptions$onS, _defaultedOptions$onS2;\n\n      let {\n        data\n      } = _ref;\n      (_defaultedOptions$onS = defaultedOptions.onSuccess) === null || _defaultedOptions$onS === void 0 ? void 0 : _defaultedOptions$onS.call(defaultedOptions, data);\n      (_defaultedOptions$onS2 = defaultedOptions.onSettled) === null || _defaultedOptions$onS2 === void 0 ? void 0 : _defaultedOptions$onS2.call(defaultedOptions, data, null);\n    }).catch(error => {\n      var _defaultedOptions$onE, _defaultedOptions$onS3;\n\n      errorResetBoundary.clearReset();\n      (_defaultedOptions$onE = defaultedOptions.onError) === null || _defaultedOptions$onE === void 0 ? void 0 : _defaultedOptions$onE.call(defaultedOptions, error);\n      (_defaultedOptions$onS3 = defaultedOptions.onSettled) === null || _defaultedOptions$onS3 === void 0 ? void 0 : _defaultedOptions$onS3.call(defaultedOptions, undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.useErrorBoundary, [result.error, observer.getCurrentQuery()])) {\n    throw result.error;\n  }\n\n  const status = result.status === 'loading' && result.fetchStatus === 'idle' ? 'idle' : result.status;\n  const isIdle = status === 'idle';\n  const isLoading = status === 'loading' && result.fetchStatus === 'fetching';\n  return { ...result,\n    defaultedOptions,\n    isIdle,\n    isLoading,\n    observer,\n    status\n  };\n}\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery(parsedOptions, InfiniteQueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchNextPage: baseQuery.fetchNextPage,\n    fetchStatus: baseQuery.fetchStatus,\n    hasNextPage: baseQuery.hasNextPage,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetching: baseQuery.isFetching,\n    isFetchingNextPage: baseQuery.isFetchingNextPage,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  }; // Handle result property usage tracking\n\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery(parsedOptions, QueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchStatus: baseQuery.fetchStatus,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetching: baseQuery.isFetching,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  }; // Handle result property usage tracking\n\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\nfunction useProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const forceUpdate = useForceUpdate();\n  const client = useClient();\n  const provider = React.useRef(getProvider({\n    chainId\n  }));\n  React.useEffect(() => {\n    const unwatch = watchProvider({\n      chainId\n    }, provider_ => {\n      provider.current = provider_;\n      forceUpdate();\n    });\n    return unwatch;\n  }, [chainId, client, forceUpdate]);\n  return provider.current;\n}\n\nfunction useWebSocketProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const forceUpdate = useForceUpdate();\n  const client = useClient();\n  const webSocketProvider = React.useRef(getWebSocketProvider({\n    chainId\n  }));\n  React.useEffect(() => {\n    const unwatch = watchWebSocketProvider({\n      chainId\n    }, webSocketProvider_ => {\n      webSocketProvider.current = webSocketProvider_;\n      forceUpdate();\n    });\n    return unwatch;\n  }, [chainId, client, forceUpdate]);\n  return webSocketProvider.current;\n}\n\nfunction useChainId() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = useProvider({\n    chainId\n  });\n  return provider.network.chainId;\n}\n\nfunction useForceUpdate() {\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n  return forceUpdate;\n}\n\nconst queryKey$c = _ref => {\n  let {\n    chainId\n  } = _ref;\n  return [{\n    entity: 'blockNumber',\n    chainId\n  }];\n};\n\nconst queryFn$c = _ref2 => {\n  let {\n    queryKey: [{\n      chainId\n    }]\n  } = _ref2;\n  return fetchBlockNumber({\n    chainId\n  });\n};\n\nfunction useBlockNumber() {\n  let {\n    cacheTime = 0,\n    chainId: chainId_,\n    enabled = true,\n    staleTime,\n    suspense,\n    watch = false,\n    onBlock,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const provider = useProvider();\n  const webSocketProvider = useWebSocketProvider();\n  const queryClient = useQueryClient();\n  React.useEffect(() => {\n    if (!watch && !onBlock) return;\n\n    const listener = blockNumber => {\n      // Just to be safe in case the provider implementation\n      // calls the event callback after .off() has been called\n      if (watch) queryClient.setQueryData(queryKey$c({\n        chainId\n      }), blockNumber);\n      if (onBlock) onBlock(blockNumber);\n    };\n\n    const provider_ = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider;\n    provider_.on('block', listener);\n    return () => {\n      provider_.off('block', listener);\n    };\n  }, [chainId, onBlock, provider, queryClient, watch, webSocketProvider]);\n  return useQuery(queryKey$c({\n    chainId\n  }), queryFn$c, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$b = _ref => {\n  let {\n    chainId,\n    formatUnits\n  } = _ref;\n  return [{\n    entity: 'feeData',\n    chainId,\n    formatUnits\n  }];\n};\n\nconst queryFn$b = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      formatUnits\n    }]\n  } = _ref2;\n  return fetchFeeData({\n    chainId,\n    formatUnits\n  });\n};\n\nfunction useFeeData() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    formatUnits = 'wei',\n    staleTime,\n    suspense,\n    watch,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const feeDataQuery = useQuery(queryKey$b({\n    chainId,\n    formatUnits\n  }), queryFn$b, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    watch\n  });\n  React.useEffect(() => {\n    if (!enabled) return;\n    if (!watch) return;\n    if (!blockNumber) return;\n    feeDataQuery.refetch(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [blockNumber]);\n  return feeDataQuery;\n}\n\nfunction useInvalidateOnBlock(_ref) {\n  let {\n    enabled,\n    queryKey\n  } = _ref;\n  const queryClient = useQueryClient();\n  useBlockNumber({\n    onBlock: enabled ? () => queryClient.invalidateQueries(queryKey) : undefined\n  });\n}\n\nconst isPlainObject = obj => typeof obj === 'object' && !Array.isArray(obj);\n\nfunction useSyncExternalStoreWithTracked(subscribe, getSnapshot) {\n  let getServerSnapshot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getSnapshot;\n  let isEqual = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : (a, b) => deepEqual(a, b);\n  const trackedKeys = React.useRef([]);\n  const result = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, x => x, (a, b) => {\n    if (isPlainObject(a) && isPlainObject(b)) {\n      for (const key of trackedKeys.current) {\n        const equal = isEqual(a[key], b[key]);\n        if (!equal) return false;\n      }\n\n      return true;\n    }\n\n    return isEqual(a, b);\n  });\n\n  if (isPlainObject(result)) {\n    const trackedResult = { ...result\n    };\n    Object.defineProperties(trackedResult, Object.entries(trackedResult).reduce((res, _ref) => {\n      let [key, value] = _ref;\n      return { ...res,\n        [key]: {\n          configurable: false,\n          enumerable: true,\n          get: () => {\n            if (!trackedKeys.current.includes(key)) {\n              trackedKeys.current.push(key);\n            }\n\n            return value;\n          }\n        }\n      };\n    }, {}));\n    return trackedResult;\n  }\n\n  return result;\n}\n\nfunction useAccount() {\n  let {\n    onConnect,\n    onDisconnect\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const account = useSyncExternalStoreWithTracked(watchAccount, getAccount);\n  const {\n    subscribe\n  } = useClient();\n  React.useEffect(() => {\n    // No need to subscribe if these callbacks aren't defined\n    if (!onConnect && !onDisconnect) return; // Trigger update when status changes\n\n    const unsubscribe = subscribe(state => state.status, (status, prevStatus) => {\n      if (!!onConnect && status === 'connected') {\n        const {\n          address,\n          connector\n        } = getAccount();\n        onConnect({\n          address,\n          connector,\n          isReconnected: prevStatus === 'reconnecting'\n        });\n      }\n\n      if (!!onDisconnect && prevStatus !== 'connecting' && status === 'disconnected') onDisconnect();\n    });\n    return unsubscribe;\n  }, [onConnect, onDisconnect, subscribe]);\n  return account;\n}\n\nconst queryKey$a = _ref => {\n  let {\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  } = _ref;\n  return [{\n    entity: 'balance',\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  }];\n};\n\nconst queryFn$a = _ref2 => {\n  let {\n    queryKey: [{\n      addressOrName,\n      chainId,\n      formatUnits,\n      token\n    }]\n  } = _ref2;\n  if (!addressOrName) throw new Error('address is required');\n  return fetchBalance({\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  });\n};\n\nfunction useBalance() {\n  let {\n    addressOrName,\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    formatUnits = 'ether',\n    staleTime,\n    suspense,\n    token,\n    watch,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const balanceQuery = useQuery(queryKey$a({\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  }), queryFn$a, {\n    cacheTime,\n    enabled: Boolean(enabled && addressOrName),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    watch\n  });\n  React.useEffect(() => {\n    if (!enabled) return;\n    if (!watch) return;\n    if (!blockNumber) return;\n    if (!addressOrName) return;\n    balanceQuery.refetch(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [blockNumber]);\n  return balanceQuery;\n}\n\nconst mutationKey$6 = args => [{\n  entity: 'connect',\n  ...args\n}];\n\nconst mutationFn$5 = args => {\n  const {\n    connector,\n    chainId\n  } = args;\n  if (!connector) throw new Error('connector is required');\n  return connect({\n    connector,\n    chainId\n  });\n};\n\nfunction useConnect() {\n  let {\n    chainId,\n    connector,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = useClient();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$6({\n    connector,\n    chainId\n  }), mutationFn$5, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const connect = React.useCallback(args => {\n    var _args$chainId, _args$connector;\n\n    return mutate({\n      chainId: (_args$chainId = args === null || args === void 0 ? void 0 : args.chainId) !== null && _args$chainId !== void 0 ? _args$chainId : chainId,\n      connector: (_args$connector = args === null || args === void 0 ? void 0 : args.connector) !== null && _args$connector !== void 0 ? _args$connector : connector\n    });\n  }, [chainId, connector, mutate]);\n  const connectAsync = React.useCallback(args => {\n    var _args$chainId2, _args$connector2;\n\n    return mutateAsync({\n      chainId: (_args$chainId2 = args === null || args === void 0 ? void 0 : args.chainId) !== null && _args$chainId2 !== void 0 ? _args$chainId2 : chainId,\n      connector: (_args$connector2 = args === null || args === void 0 ? void 0 : args.connector) !== null && _args$connector2 !== void 0 ? _args$connector2 : connector\n    });\n  }, [chainId, connector, mutateAsync]);\n  return {\n    connect,\n    connectAsync,\n    connectors: client.connectors,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingConnector: variables === null || variables === void 0 ? void 0 : variables.connector,\n    reset,\n    status,\n    variables\n  };\n}\n\nconst mutationKey$5 = [{\n  entity: 'disconnect'\n}];\n\nconst mutationFn$4 = () => disconnect();\n\nfunction useDisconnect() {\n  let {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate: disconnect,\n    mutateAsync: disconnectAsync,\n    reset,\n    status\n  } = useMutation(mutationKey$5, mutationFn$4, { ...(onError ? {\n      onError(error, _variables, context) {\n        onError(error, context);\n      }\n\n    } : {}),\n    onMutate,\n    ...(onSettled ? {\n      onSettled(_data, error, _variables, context) {\n        onSettled(error, context);\n      }\n\n    } : {}),\n    ...(onSuccess ? {\n      onSuccess(_data, _variables, context) {\n        onSuccess(context);\n      }\n\n    } : {})\n  });\n  return {\n    disconnect,\n    disconnectAsync,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status\n  };\n}\n\nfunction useNetwork() {\n  return useSyncExternalStoreWithTracked(watchNetwork, getNetwork);\n}\n\nconst queryKey$9 = () => [{\n  entity: 'signer'\n}];\n\nconst queryFn$9 = () => fetchSigner();\n\nfunction useSigner() {\n  let {\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const signerQuery = useQuery(queryKey$9(), queryFn$9, {\n    cacheTime: 0,\n    staleTime: 0,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const queryClient = useQueryClient();\n  React.useEffect(() => {\n    const unwatch = watchSigner(signer => queryClient.setQueryData(queryKey$9(), signer));\n    return unwatch;\n  }, [queryClient]);\n  return signerQuery;\n}\n\nconst mutationKey$4 = args => [{\n  entity: 'signMessage',\n  ...args\n}];\n\nconst mutationFn$3 = args => {\n  const {\n    message\n  } = args;\n  if (!message) throw new Error('message is required');\n  return signMessage({\n    message\n  });\n};\n\nfunction useSignMessage() {\n  let {\n    message,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$4({\n    message\n  }), mutationFn$3, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signMessage = React.useCallback(args => mutate(args || {\n    message\n  }), [message, mutate]);\n  const signMessageAsync = React.useCallback(args => mutateAsync(args || {\n    message\n  }), [message, mutateAsync]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signMessage,\n    signMessageAsync,\n    status,\n    variables\n  };\n}\n\nconst mutationKey$3 = args => [{\n  entity: 'signTypedData',\n  ...args\n}];\n\nconst mutationFn$2 = args => {\n  const {\n    domain,\n    types,\n    value\n  } = args;\n  if (!domain || !types || !value) throw new Error('domain, types, and value are all required');\n  return signTypedData({\n    domain,\n    types,\n    value\n  });\n};\n\nfunction useSignTypedData() {\n  let {\n    domain,\n    types,\n    value,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$3({\n    domain,\n    types,\n    value\n  }), mutationFn$2, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signTypedData = React.useCallback(args => mutate(args || {\n    domain,\n    types,\n    value\n  }), [domain, types, value, mutate]);\n  const signTypedDataAsync = React.useCallback(args => mutateAsync(args || {\n    domain,\n    types,\n    value\n  }), [domain, types, value, mutateAsync]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signTypedData,\n    signTypedDataAsync,\n    status,\n    variables\n  };\n}\n\nconst mutationKey$2 = args => [{\n  entity: 'switchNetwork',\n  ...args\n}];\n\nconst mutationFn$1 = args => {\n  const {\n    chainId\n  } = args;\n  if (!chainId) throw new Error('chainId is required');\n  return switchNetwork({\n    chainId\n  });\n};\n\nfunction useSwitchNetwork() {\n  var _client$connector, _client$chains;\n\n  let {\n    chainId,\n    throwForSwitchChainNotSupported,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = useClient();\n  const forceUpdate = useForceUpdate();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$2({\n    chainId\n  }), mutationFn$1, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const switchNetwork_ = React.useCallback(chainId_ => mutate({\n    chainId: chainId_ !== null && chainId_ !== void 0 ? chainId_ : chainId\n  }), [chainId, mutate]);\n  const switchNetworkAsync_ = React.useCallback(chainId_ => mutateAsync({\n    chainId: chainId_ !== null && chainId_ !== void 0 ? chainId_ : chainId\n  }), [chainId, mutateAsync]); // Trigger update when connector changes since not all connectors support chain switching\n\n  React.useEffect(() => {\n    const unwatch = client.subscribe(_ref => {\n      let {\n        chains,\n        connector\n      } = _ref;\n      return {\n        chains,\n        connector\n      };\n    }, forceUpdate);\n    return unwatch;\n  }, [client, forceUpdate]);\n  let switchNetwork;\n  let switchNetworkAsync;\n  const supportsSwitchChain = !!((_client$connector = client.connector) !== null && _client$connector !== void 0 && _client$connector.switchChain);\n\n  if (throwForSwitchChainNotSupported || supportsSwitchChain) {\n    switchNetwork = switchNetwork_;\n    switchNetworkAsync = switchNetworkAsync_;\n  }\n\n  return {\n    chains: (_client$chains = client.chains) !== null && _client$chains !== void 0 ? _client$chains : [],\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingChainId: variables === null || variables === void 0 ? void 0 : variables.chainId,\n    reset,\n    status,\n    switchNetwork,\n    switchNetworkAsync,\n    variables\n  };\n}\n\nconst useContract = _ref => {\n  let {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref;\n  return React.useMemo(() => {\n    return getContract({\n      addressOrName,\n      contractInterface,\n      signerOrProvider\n    });\n  }, [addressOrName, contractInterface, signerOrProvider]);\n};\n\nconst useContractEvent = _ref => {\n  var _ref2;\n\n  let {\n    addressOrName,\n    chainId,\n    contractInterface,\n    listener,\n    eventName,\n    signerOrProvider,\n    once\n  } = _ref;\n  const provider = useProvider({\n    chainId\n  });\n  const webSocketProvider = useWebSocketProvider({\n    chainId\n  });\n  const contract = useContract({\n    addressOrName,\n    contractInterface,\n    signerOrProvider: (_ref2 = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider) !== null && _ref2 !== void 0 ? _ref2 : signerOrProvider\n  });\n  const listenerRef = React.useRef(listener);\n  listenerRef.current = listener;\n  React.useEffect(() => {\n    const handler = function () {\n      for (var _len = arguments.length, event = new Array(_len), _key = 0; _key < _len; _key++) {\n        event[_key] = arguments[_key];\n      }\n\n      return listenerRef.current(event);\n    };\n\n    const contract_ = contract;\n    if (once) contract_.once(eventName, handler);else contract_.on(eventName, handler);\n    return () => {\n      contract_.off(eventName, handler);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contract, eventName]);\n};\n\nconst paginatedIndexesConfig = (fn, _ref) => {\n  let {\n    perPage,\n    start,\n    direction\n  } = _ref;\n  return {\n    getNextPageParam: (lastPage, pages) => (lastPage === null || lastPage === void 0 ? void 0 : lastPage.length) === perPage ? pages.length : undefined,\n    contracts: function () {\n      let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return [...Array(perPage).keys()].map(index => {\n        return direction === 'increment' ? start + index + page * perPage : start - index - page * perPage;\n      }).filter(index => index >= 0).map(fn);\n    }\n  };\n};\nconst queryKey$8 = _ref2 => {\n  let [{\n    cacheKey,\n    overrides\n  }] = _ref2;\n  return [{\n    entity: 'readContractsInfinite',\n    cacheKey,\n    overrides\n  }];\n};\n\nconst queryFn$8 = _ref3 => {\n  let {\n    contracts\n  } = _ref3;\n  return _ref4 => {\n    let {\n      queryKey: [{\n        overrides\n      }],\n      pageParam\n    } = _ref4;\n    return readContracts({\n      contracts: contracts(pageParam || undefined),\n      overrides\n    });\n  };\n};\n\nfunction useContractInfiniteReads(_ref5) {\n  let {\n    cacheKey,\n    cacheTime,\n    contracts,\n    enabled: enabled_ = true,\n    getNextPageParam,\n    isDataEqual = deepEqual,\n    keepPreviousData,\n    onError,\n    onSettled,\n    onSuccess,\n    overrides,\n    select,\n    staleTime,\n    suspense\n  } = _ref5;\n  const queryKey_ = React.useMemo(() => queryKey$8([{\n    cacheKey,\n    overrides\n  }]), [cacheKey, overrides]);\n  const enabled = React.useMemo(() => {\n    const enabled = Boolean(enabled_ && contracts);\n    return enabled;\n  }, [contracts, enabled_]);\n  return useInfiniteQuery(queryKey_, queryFn$8({\n    contracts\n  }), {\n    cacheTime,\n    enabled,\n    getNextPageParam,\n    isDataEqual,\n    keepPreviousData,\n    select,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$7 = _ref => {\n  let [{\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides\n  }, {\n    blockNumber\n  }] = _ref;\n  return [{\n    entity: 'readContract',\n    addressOrName,\n    args,\n    blockNumber,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides\n  }];\n};\n\nconst queryKeyHashFn$1 = _ref2 => {\n  let [queryKey_] = _ref2;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {\n    contractInterface,\n    ...rest\n  } = queryKey_;\n  return hashQueryKey([rest]);\n};\n\nconst queryFn$7 = _ref3 => {\n  let {\n    queryKey: [{\n      addressOrName,\n      args,\n      chainId,\n      contractInterface,\n      functionName,\n      overrides\n    }]\n  } = _ref3;\n  return readContract({\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides\n  });\n};\n\nfunction useContractRead(_ref4) {\n  let {\n    addressOrName,\n    contractInterface,\n    functionName,\n    args,\n    chainId: chainId_,\n    overrides,\n    cacheOnBlock = false,\n    cacheTime,\n    enabled: enabled_ = true,\n    isDataEqual = deepEqual,\n    select,\n    staleTime,\n    suspense,\n    watch,\n    onError,\n    onSettled,\n    onSuccess\n  } = _ref4;\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    enabled: watch || cacheOnBlock,\n    watch\n  });\n  const queryKey_ = React.useMemo(() => queryKey$7([{\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides\n  }, {\n    blockNumber: cacheOnBlock ? blockNumber : undefined\n  }]), [addressOrName, args, blockNumber, cacheOnBlock, chainId, contractInterface, functionName, overrides]);\n  const enabled = React.useMemo(() => {\n    let enabled = Boolean(enabled_ && addressOrName && functionName);\n    if (cacheOnBlock) enabled = Boolean(enabled && blockNumber);\n    return enabled;\n  }, [addressOrName, blockNumber, cacheOnBlock, enabled_, functionName]);\n  useInvalidateOnBlock({\n    enabled: watch && !cacheOnBlock,\n    queryKey: queryKey_\n  });\n  return useQuery(queryKey_, queryFn$7, {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    queryKeyHashFn: queryKeyHashFn$1,\n    select: data => {\n      const result = parseContractResult({\n        contractInterface,\n        data,\n        functionName\n      });\n      return select ? select(result) : result;\n    },\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$6 = _ref => {\n  let [{\n    allowFailure,\n    contracts,\n    overrides\n  }, {\n    blockNumber,\n    chainId\n  }] = _ref;\n  return [{\n    entity: 'readContracts',\n    allowFailure,\n    blockNumber,\n    chainId,\n    contracts,\n    overrides\n  }];\n};\n\nconst queryKeyHashFn = _ref2 => {\n  let [queryKey_] = _ref2;\n  const {\n    contracts,\n    ...rest\n  } = queryKey_;\n  const contracts_ = contracts === null || contracts === void 0 ? void 0 : contracts.map(contract => {\n    // Exclude the contract interface from the serialized query key.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const {\n      contractInterface,\n      ...rest\n    } = contract;\n    return rest;\n  });\n  return hashQueryKey([{\n    contracts: contracts_,\n    ...rest\n  }]);\n};\n\nconst queryFn$6 = _ref3 => {\n  let {\n    queryKey: [{\n      allowFailure,\n      contracts,\n      overrides\n    }]\n  } = _ref3;\n  return readContracts({\n    allowFailure,\n    contracts,\n    overrides\n  });\n};\n\nfunction useContractReads(_ref4) {\n  let {\n    allowFailure = true,\n    cacheOnBlock = false,\n    cacheTime,\n    contracts,\n    overrides,\n    enabled: enabled_ = true,\n    isDataEqual = deepEqual,\n    keepPreviousData,\n    onError,\n    onSettled,\n    onSuccess,\n    select,\n    staleTime,\n    suspense,\n    watch\n  } = _ref4;\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    enabled: watch || cacheOnBlock,\n    watch\n  });\n  const chainId = useChainId();\n  const queryKey_ = React.useMemo(() => queryKey$6([{\n    allowFailure,\n    contracts,\n    overrides\n  }, {\n    blockNumber: cacheOnBlock ? blockNumber : undefined,\n    chainId\n  }]), [allowFailure, blockNumber, cacheOnBlock, chainId, contracts, overrides]);\n  const enabled = React.useMemo(() => {\n    let enabled = Boolean(enabled_ && contracts.length > 0);\n    if (cacheOnBlock) enabled = Boolean(enabled && blockNumber);\n    return enabled;\n  }, [blockNumber, cacheOnBlock, contracts, enabled_]);\n  useInvalidateOnBlock({\n    enabled: watch && !cacheOnBlock,\n    queryKey: queryKey_\n  });\n  return useQuery(queryKey_, queryFn$6, {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    keepPreviousData,\n    queryKeyHashFn,\n    staleTime,\n    select: data => {\n      const result = data.map((data, i) => {\n        var _contracts$i, _contracts$i2;\n\n        return contracts[i] ? parseContractResult({\n          contractInterface: (_contracts$i = contracts[i]) === null || _contracts$i === void 0 ? void 0 : _contracts$i.contractInterface,\n          functionName: (_contracts$i2 = contracts[i]) === null || _contracts$i2 === void 0 ? void 0 : _contracts$i2.functionName,\n          data\n        }) : data;\n      });\n      return select ? select(result) : result;\n    },\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst mutationKey$1 = _ref => {\n  let [{\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    overrides\n  }] = _ref;\n  return [{\n    entity: 'writeContract',\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    overrides\n  }];\n};\nfunction useContractWrite(_ref2) {\n  let {\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides,\n    signerOrProvider,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = _ref2;\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$1([{\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides\n  }]), _ref3 => {\n    let {\n      args,\n      overrides\n    } = _ref3;\n    return writeContract({\n      addressOrName,\n      args,\n      chainId,\n      contractInterface,\n      functionName,\n      overrides,\n      signerOrProvider\n    });\n  }, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const write = React.useCallback(overrideConfig => mutate({\n    addressOrName,\n    chainId,\n    contractInterface,\n    functionName,\n    signerOrProvider,\n    ...(overrideConfig || {\n      args,\n      overrides\n    })\n  }), [addressOrName, args, chainId, contractInterface, functionName, mutate, overrides, signerOrProvider]);\n  const writeAsync = React.useCallback(overrideConfig => mutateAsync({\n    addressOrName,\n    chainId,\n    contractInterface,\n    functionName,\n    signerOrProvider,\n    ...(overrideConfig || {\n      args,\n      overrides\n    })\n  }), [addressOrName, args, chainId, contractInterface, functionName, mutateAsync, overrides, signerOrProvider]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    write,\n    writeAsync\n  };\n}\n\nconst queryKey$5 = _ref => {\n  let {\n    address,\n    chainId,\n    formatUnits\n  } = _ref;\n  return [{\n    entity: 'token',\n    address,\n    chainId,\n    formatUnits\n  }];\n};\n\nconst queryFn$5 = _ref2 => {\n  let {\n    queryKey: [{\n      address,\n      chainId,\n      formatUnits\n    }]\n  } = _ref2;\n  if (!address) throw new Error('address is required');\n  return fetchToken({\n    address,\n    chainId,\n    formatUnits\n  });\n};\n\nfunction useToken() {\n  let {\n    address,\n    chainId: chainId_,\n    formatUnits = 'ether',\n    cacheTime,\n    enabled = true,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$5({\n    address,\n    chainId,\n    formatUnits\n  }), queryFn$5, {\n    cacheTime,\n    enabled: Boolean(enabled && address),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$4 = _ref => {\n  let {\n    chainId,\n    name\n  } = _ref;\n  return [{\n    entity: 'ensAddress',\n    chainId,\n    name\n  }];\n};\n\nconst queryFn$4 = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      name\n    }]\n  } = _ref2;\n  if (!name) throw new Error('name is required');\n  return fetchEnsAddress({\n    chainId,\n    name\n  });\n};\n\nfunction useEnsAddress() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    name,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$4({\n    chainId,\n    name\n  }), queryFn$4, {\n    cacheTime,\n    enabled: Boolean(enabled && chainId && name),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$3 = _ref => {\n  let {\n    addressOrName,\n    chainId\n  } = _ref;\n  return [{\n    entity: 'ensAvatar',\n    addressOrName,\n    chainId\n  }];\n};\n\nconst queryFn$3 = _ref2 => {\n  let {\n    queryKey: [{\n      addressOrName,\n      chainId\n    }]\n  } = _ref2;\n  if (!addressOrName) throw new Error('addressOrName is required');\n  return fetchEnsAvatar({\n    addressOrName,\n    chainId\n  });\n};\n\nfunction useEnsAvatar() {\n  let {\n    addressOrName,\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$3({\n    addressOrName,\n    chainId\n  }), queryFn$3, {\n    cacheTime,\n    enabled: Boolean(enabled && addressOrName && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$2 = _ref => {\n  let {\n    address,\n    chainId\n  } = _ref;\n  return [{\n    entity: 'ensName',\n    address,\n    chainId\n  }];\n};\n\nconst queryFn$2 = _ref2 => {\n  let {\n    queryKey: [{\n      address,\n      chainId\n    }]\n  } = _ref2;\n  if (!address) throw new Error('address is required');\n  return fetchEnsName({\n    address,\n    chainId\n  });\n};\n\nfunction useEnsName() {\n  let {\n    address,\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$2({\n    address,\n    chainId\n  }), queryFn$2, {\n    cacheTime,\n    enabled: Boolean(enabled && address && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$1 = _ref => {\n  let {\n    chainId,\n    name\n  } = _ref;\n  return [{\n    entity: 'ensResolver',\n    chainId,\n    name\n  }];\n};\n\nconst queryFn$1 = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      name\n    }]\n  } = _ref2;\n  if (!name) throw new Error('name is required');\n  return fetchEnsResolver({\n    chainId,\n    name\n  });\n};\n\nfunction useEnsResolver() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    name,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$1({\n    chainId,\n    name\n  }), queryFn$1, {\n    cacheTime,\n    enabled: Boolean(enabled && chainId && name),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst mutationKey = args => [{\n  entity: 'sendTransaction',\n  ...args\n}];\n\nconst mutationFn = args => {\n  const {\n    chainId,\n    request\n  } = args;\n  if (!request) throw new Error('request is required');\n  return sendTransaction({\n    chainId,\n    request\n  });\n};\n\nfunction useSendTransaction() {\n  let {\n    chainId,\n    request,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey({\n    chainId,\n    request\n  }), mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const sendTransaction = React.useCallback(args => mutate({\n    chainId,\n    request,\n    ...(args !== null && args !== void 0 ? args : {})\n  }), [chainId, mutate, request]);\n  const sendTransactionAsync = React.useCallback(args => mutateAsync({\n    chainId,\n    request,\n    ...(args !== null && args !== void 0 ? args : {})\n  }), [chainId, mutateAsync, request]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    sendTransaction,\n    sendTransactionAsync,\n    status,\n    variables\n  };\n}\n\nconst queryKey = _ref => {\n  let {\n    confirmations,\n    chainId,\n    hash,\n    timeout,\n    wait\n  } = _ref;\n  return [{\n    entity: 'waitForTransaction',\n    confirmations,\n    chainId,\n    hash,\n    timeout,\n    wait\n  }];\n};\n\nconst queryFn = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      confirmations,\n      hash,\n      timeout,\n      wait\n    }]\n  } = _ref2;\n  return waitForTransaction({\n    chainId,\n    confirmations,\n    hash,\n    timeout,\n    wait\n  });\n};\n\nfunction useWaitForTransaction() {\n  let {\n    chainId: chainId_,\n    confirmations,\n    hash,\n    timeout,\n    wait,\n    cacheTime,\n    enabled = true,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey({\n    chainId,\n    confirmations,\n    hash,\n    timeout,\n    wait\n  }), queryFn, {\n    cacheTime,\n    enabled: Boolean(enabled && (hash || wait)),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nexport { Context, WagmiConfig, WagmiConfig as WagmiProvider, createClient, deserialize, paginatedIndexesConfig, serialize, useAccount, useBalance, useBlockNumber, useClient, useConnect, useContract, useContractEvent, useContractInfiniteReads, useContractRead, useContractReads, useContractWrite, useDisconnect, useEnsAddress, useEnsAvatar, useEnsName, useEnsResolver, useFeeData, useInfiniteQuery, useNetwork, useProvider, useQuery, useSendTransaction, useSignMessage, useSignTypedData, useSigner, useSwitchNetwork, useToken, useWaitForTransaction, useWebSocketProvider };\n", "export class Subscribable {\n  constructor() {\n    this.listeners = [];\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  subscribe(listener) {\n    this.listeners.push(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners = this.listeners.filter(x => x !== listener);\n      this.onUnsubscribe();\n    };\n  }\n\n  hasListeners() {\n    return this.listeners.length > 0;\n  }\n\n  onSubscribe() {// Do nothing\n  }\n\n  onUnsubscribe() {// Do nothing\n  }\n\n}", "// TYPES\n// UTILS\nexport const isServer = typeof window === 'undefined';\nexport function noop() {\n  return undefined;\n}\nexport function functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nexport function isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nexport function difference(array1, array2) {\n  return array1.filter(x => array2.indexOf(x) === -1);\n}\nexport function replaceAt(array, index, value) {\n  const copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nexport function timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nexport function parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\nexport function parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3,\n        mutationKey: arg1,\n        mutationFn: arg2\n      };\n    }\n\n    return { ...arg2,\n      mutationKey: arg1\n    };\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2,\n      mutationFn: arg1\n    };\n  }\n\n  return { ...arg1\n  };\n}\nexport function parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    queryKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nexport function parseMutationFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    mutationKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nexport function matchQuery(filters, query) {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive();\n\n    if (type === 'active' && !isActive) {\n      return false;\n    }\n\n    if (type === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetchStatus !== 'undefined' && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nexport function matchMutation(filters, mutation) {\n  const {\n    exact,\n    fetching,\n    predicate,\n    mutationKey\n  } = filters;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nexport function hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\n\nexport function hashQueryKey(queryKey) {\n  return JSON.stringify(queryKey, (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : val);\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nexport function partialMatchKey(a, b) {\n  return partialDeepEqual(a, b);\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nexport function partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nexport function replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aSize = array ? a.length : Object.keys(a).length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nexport function shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nexport function isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  const ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  const prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isQueryKey(value) {\n  return Array.isArray(value);\n}\nexport function isError(value) {\n  return value instanceof Error;\n}\nexport function sleep(timeout) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nexport function scheduleMicrotask(callback) {\n  sleep(0).then(callback);\n}\nexport function getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n}\nexport function replaceData(prevData, data, options) {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual != null && options.isDataEqual(prevData, data)) {\n    return prevData;\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data);\n  }\n\n  return data;\n}", "import { Subscribable } from \"./subscribable.mjs\";\nimport { isServer } from \"./utils.mjs\";\nexport class FocusManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n\n  setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  }\n\n  onFocus() {\n    this.listeners.forEach(listener => {\n      listener();\n    });\n  }\n\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n\n}\nexport const focusManager = new FocusManager();", "import { Subscribable } from \"./subscribable.mjs\";\nimport { isServer } from \"./utils.mjs\";\nexport class OnlineManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        window.addEventListener('online', listener, false);\n        window.addEventListener('offline', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', listener);\n          window.removeEventListener('offline', listener);\n        };\n      }\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    this.online = online;\n\n    if (online) {\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(listener => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nexport const onlineManager = new OnlineManager();", "import { focusManager } from \"./focusManager.mjs\";\nimport { onlineManager } from \"./onlineManager.mjs\";\nimport { sleep } from \"./utils.mjs\";\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * 2 ** failureCount, 30000);\n}\n\nexport function canFetch(networkMode) {\n  return (networkMode != null ? networkMode : 'online') === 'online' ? onlineManager.isOnline() : true;\n}\nexport class CancelledError {\n  constructor(options) {\n    this.revert = options == null ? void 0 : options.revert;\n    this.silent = options == null ? void 0 : options.silent;\n  }\n\n}\nexport function isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nexport function createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  let promiseResolve;\n  let promiseReject;\n  const promise = new Promise((outerResolve, outerReject) => {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  const cancel = cancelOptions => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort == null ? void 0 : config.abort();\n    }\n  };\n\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n\n  const shouldPause = () => !focusManager.isFocused() || config.networkMode !== 'always' && !onlineManager.isOnline();\n\n  const resolve = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  const reject = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  const pause = () => {\n    return new Promise(continueResolve => {\n      continueFn = value => {\n        if (isResolved || !shouldPause()) {\n          return continueResolve(value);\n        }\n      };\n\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(() => {\n      continueFn = undefined;\n\n      if (!isResolved) {\n        config.onContinue == null ? void 0 : config.onContinue();\n      }\n    });\n  }; // Create loop function\n\n\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return;\n    }\n\n    let promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      const retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      const retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      const delay = typeof retryDelay === 'function' ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === 'number' && failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n      if (isRetryCancelled || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(() => {\n        if (shouldPause()) {\n          return pause();\n        }\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  if (canFetch(config.networkMode)) {\n    run();\n  } else {\n    pause().then(run);\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      continueFn == null ? void 0 : continueFn();\n    },\n    cancelRetry,\n    continueRetry\n  };\n}", "export const defaultLogger = console;", "import { scheduleMicrotask } from \"./utils.mjs\"; // TYPES\n\nexport function createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n\n  let notifyFn = callback => {\n    callback();\n  };\n\n  let batchNotifyFn = callback => {\n    callback();\n  };\n\n  const batch = callback => {\n    let result;\n    transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      transactions--;\n\n      if (!transactions) {\n        flush();\n      }\n    }\n\n    return result;\n  };\n\n  const schedule = callback => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleMicrotask(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n\n\n  const batchCalls = callback => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args);\n      });\n    };\n  };\n\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n\n    if (originalQueue.length) {\n      scheduleMicrotask(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach(callback => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n\n\n  const setNotifyFunction = fn => {\n    notifyFn = fn;\n  };\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n\n\n  const setBatchNotifyFunction = fn => {\n    batchNotifyFn = fn;\n  };\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction\n  };\n} // SINGLETON\n\nexport const notifyManager = createNotifyManager();", "import { isServer, isValidTimeout } from \"./utils.mjs\";\nexport class Removable {\n  destroy() {\n    this.clearGcTimeout();\n  }\n\n  scheduleGc() {\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.cacheTime);\n    }\n  }\n\n  updateCacheTime(newCacheTime) {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : isServer ? Infinity : 5 * 60 * 1000);\n  }\n\n  clearGcTimeout() {\n    clearTimeout(this.gcTimeout);\n    this.gcTimeout = undefined;\n  }\n\n}", "import { getAbortController, noop, replaceData, timeUntilStale } from \"./utils.mjs\";\nimport { defaultLogger } from \"./logger.mjs\";\nimport { notifyManager } from \"./notifyManager.mjs\";\nimport { isCancelledError, canFetch, createRetryer } from \"./retryer.mjs\";\nimport { Removable } from \"./removable.mjs\"; // TYPES\n\n// CLASS\nexport class Query extends Removable {\n  constructor(config) {\n    super();\n    this.abortSignalConsumed = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.logger = config.logger || defaultLogger;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || getDefaultState(this.options);\n    this.state = this.initialState;\n    this.meta = config.meta;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.meta = options == null ? void 0 : options.meta;\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this);\n    }\n  }\n\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options); // Set data and mark it as cached\n\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt,\n      manual: options == null ? void 0 : options.manual\n    });\n    return data;\n  }\n\n  setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state,\n      setStateOptions\n    });\n  }\n\n  cancel(options) {\n    var _this$retryer;\n\n    const promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n\n  destroy() {\n    super.destroy();\n    this.cancel({\n      silent: true\n    });\n  }\n\n  reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  }\n\n  isActive() {\n    return this.observers.some(observer => observer.options.enabled !== false);\n  }\n\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n\n  isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(observer => observer.getCurrentResult().isStale);\n  }\n\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n\n  onFocus() {\n    var _this$retryer2;\n\n    const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  }\n\n  onOnline() {\n    var _this$retryer3;\n\n    const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  }\n\n  addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    if (this.observers.indexOf(observer) !== -1) {\n      this.observers = this.observers.filter(x => x !== observer);\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        this.scheduleGc();\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  getObserversCount() {\n    return this.observers.length;\n  }\n\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  }\n\n  fetch(options, fetchOptions) {\n    var _this$options$behavio, _context$fetchOptions;\n\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions != null && fetchOptions.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      const observer = this.observers.find(x => x.options.queryFn);\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    if (!Array.isArray(this.options.queryKey)) {\n      if (process.env.NODE_ENV !== 'production') {\n        this.logger.error(\"As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']\");\n      }\n    }\n\n    const abortController = getAbortController(); // Create query function context\n\n    const queryFnContext = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    }; // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n\n    const addSignalProperty = object => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true;\n            return abortController.signal;\n          }\n\n          return undefined;\n        }\n      });\n    };\n\n    addSignalProperty(queryFnContext); // Create fetch function\n\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject('Missing queryFn');\n      }\n\n      this.abortSignalConsumed = false;\n      return this.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn,\n      meta: this.meta\n    };\n    addSignalProperty(context);\n    (_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch(context); // Store state in case the current fetch needs to be reverted\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (this.state.fetchStatus === 'idle' || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    }\n\n    const onError = error => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n\n      if (!isCancelledError(error)) {\n        var _this$cache$config$on, _this$cache$config;\n\n        // Notify cache callback\n        (_this$cache$config$on = (_this$cache$config = this.cache.config).onError) == null ? void 0 : _this$cache$config$on.call(_this$cache$config, error, this);\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error);\n        }\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc();\n      }\n\n      this.isFetchingOptimistic = false;\n    }; // Try to fetch the data\n\n\n    this.retryer = createRetryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : abortController.abort.bind(abortController),\n      onSuccess: data => {\n        var _this$cache$config$on2, _this$cache$config2;\n\n        if (typeof data === 'undefined') {\n          onError(new Error('Query data cannot be undefined'));\n          return;\n        }\n\n        this.setData(data); // Notify cache callback\n\n        (_this$cache$config$on2 = (_this$cache$config2 = this.cache.config).onSuccess) == null ? void 0 : _this$cache$config$on2.call(_this$cache$config2, data, this);\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc();\n        }\n\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: () => {\n        this.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: () => {\n        this.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: () => {\n        this.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      var _action$meta, _action$dataUpdatedAt;\n\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            fetchFailureCount: state.fetchFailureCount + 1\n          };\n\n        case 'pause':\n          return { ...state,\n            fetchStatus: 'paused'\n          };\n\n        case 'continue':\n          return { ...state,\n            fetchStatus: 'fetching'\n          };\n\n        case 'fetch':\n          return { ...state,\n            fetchFailureCount: 0,\n            fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n            fetchStatus: canFetch(this.options.networkMode) ? 'fetching' : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading'\n            })\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0\n            })\n          };\n\n        case 'error':\n          const error = action.error;\n\n          if (isCancelledError(error) && error.revert && this.revertState) {\n            return { ...this.revertState\n            };\n          }\n\n          return { ...state,\n            error: error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchStatus: 'idle',\n            status: 'error'\n          };\n\n        case 'invalidate':\n          return { ...state,\n            isInvalidated: true\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onQueryUpdate(action);\n      });\n      this.cache.notify({\n        query: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\n\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n  const hasInitialData = typeof options.initialData !== 'undefined';\n  const initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  const hasData = typeof data !== 'undefined';\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle'\n  };\n}", "import { hashQueryKeyByOptions, matchQuery, parseFilterArgs } from \"./utils.mjs\";\nimport { Query } from \"./query.mjs\";\nimport { notifyManager } from \"./notifyManager.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\";\n// CLASS\nexport class QueryCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.queries = [];\n    this.queriesMap = {};\n  }\n\n  build(client, options, state) {\n    var _options$queryHash;\n\n    const queryKey = options.queryKey;\n    const queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n        meta: options.meta\n      });\n      this.add(query);\n    }\n\n    return query;\n  }\n\n  add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'added',\n        query\n      });\n    }\n  }\n\n  remove(query) {\n    const queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(x => x !== query);\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'removed',\n        query\n      });\n    }\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        this.remove(query);\n      });\n    });\n  }\n\n  get(queryHash) {\n    return this.queriesMap[queryHash];\n  }\n\n  getAll() {\n    return this.queries;\n  }\n\n  find(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(query => matchQuery(filters, query));\n  }\n\n  findAll(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    return Object.keys(filters).length > 0 ? this.queries.filter(query => matchQuery(filters, query)) : this.queries;\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n\n  onFocus() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onFocus();\n      });\n    });\n  }\n\n  onOnline() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onOnline();\n      });\n    });\n  }\n\n}", "import { defaultLogger } from \"./logger.mjs\";\nimport { notifyManager } from \"./notifyManager.mjs\";\nimport { Removable } from \"./removable.mjs\";\nimport { canFetch, createRetryer } from \"./retryer.mjs\"; // TYPES\n\n// CLASS\nexport class Mutation extends Removable {\n  constructor(config) {\n    super();\n    this.options = { ...config.defaultOptions,\n      ...config.options\n    };\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.logger = config.logger || defaultLogger;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n    this.meta = config.meta;\n    this.updateCacheTime(this.options.cacheTime);\n    this.scheduleGc();\n  }\n\n  setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state\n    });\n  }\n\n  addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer); // Stop the mutation from being garbage collected\n\n      this.clearGcTimeout();\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    this.observers = this.observers.filter(x => x !== observer);\n    this.scheduleGc();\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer\n    });\n  }\n\n  optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc();\n      } else {\n        this.mutationCache.remove(this);\n      }\n    }\n  }\n\n  continue() {\n    if (this.retryer) {\n      this.retryer.continue();\n      return this.retryer.promise;\n    }\n\n    return this.execute();\n  }\n\n  async execute() {\n    const executeMutation = () => {\n      var _this$options$retry;\n\n      this.retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found');\n          }\n\n          return this.options.mutationFn(this.state.variables);\n        },\n        onFail: () => {\n          this.dispatch({\n            type: 'failed'\n          });\n        },\n        onPause: () => {\n          this.dispatch({\n            type: 'pause'\n          });\n        },\n        onContinue: () => {\n          this.dispatch({\n            type: 'continue'\n          });\n        },\n        retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode\n      });\n      return this.retryer.promise;\n    };\n\n    const restored = this.state.status === 'loading';\n\n    try {\n      var _this$mutationCache$c3, _this$mutationCache$c4, _this$options$onSucce, _this$options2, _this$options$onSettl, _this$options3;\n\n      if (!restored) {\n        var _this$mutationCache$c, _this$mutationCache$c2, _this$options$onMutat, _this$options;\n\n        this.dispatch({\n          type: 'loading',\n          variables: this.options.variables\n        }); // Notify cache callback\n\n        (_this$mutationCache$c = (_this$mutationCache$c2 = this.mutationCache.config).onMutate) == null ? void 0 : _this$mutationCache$c.call(_this$mutationCache$c2, this.state.variables, this);\n        const context = await ((_this$options$onMutat = (_this$options = this.options).onMutate) == null ? void 0 : _this$options$onMutat.call(_this$options, this.state.variables));\n\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables\n          });\n        }\n      }\n\n      const data = await executeMutation(); // Notify cache callback\n\n      (_this$mutationCache$c3 = (_this$mutationCache$c4 = this.mutationCache.config).onSuccess) == null ? void 0 : _this$mutationCache$c3.call(_this$mutationCache$c4, data, this.state.variables, this.state.context, this);\n      await ((_this$options$onSucce = (_this$options2 = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options2, data, this.state.variables, this.state.context));\n      await ((_this$options$onSettl = (_this$options3 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options3, data, null, this.state.variables, this.state.context));\n      this.dispatch({\n        type: 'success',\n        data\n      });\n      return data;\n    } catch (error) {\n      try {\n        var _this$mutationCache$c5, _this$mutationCache$c6, _this$options$onError, _this$options4, _this$options$onSettl2, _this$options5;\n\n        // Notify cache callback\n        (_this$mutationCache$c5 = (_this$mutationCache$c6 = this.mutationCache.config).onError) == null ? void 0 : _this$mutationCache$c5.call(_this$mutationCache$c6, error, this.state.variables, this.state.context, this);\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error);\n        }\n\n        await ((_this$options$onError = (_this$options4 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options4, error, this.state.variables, this.state.context));\n        await ((_this$options$onSettl2 = (_this$options5 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options5, undefined, error, this.state.variables, this.state.context));\n        throw error;\n      } finally {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n    }\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            failureCount: state.failureCount + 1\n          };\n\n        case 'pause':\n          return { ...state,\n            isPaused: true\n          };\n\n        case 'continue':\n          return { ...state,\n            isPaused: false\n          };\n\n        case 'loading':\n          return { ...state,\n            context: action.context,\n            data: undefined,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            error: null,\n            status: 'success',\n            isPaused: false\n          };\n\n        case 'error':\n          return { ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            isPaused: false,\n            status: 'error'\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onMutationUpdate(action);\n      });\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\nexport function getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}", "import { notifyManager } from \"./notifyManager.mjs\";\nimport { Mutation } from \"./mutation.mjs\";\nimport { matchMutation, noop } from \"./utils.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\"; // TYPES\n\n// CLASS\nexport class MutationCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined,\n      meta: options.meta\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => matchMutation(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => matchMutation(filters, mutation));\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n    return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));\n  }\n\n}", "export function infiniteQueryBehavior() {\n  return {\n    onFetch: context => {\n      context.fetchFn = () => {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        const refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        const fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        const pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        const isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        const isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        const oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        const oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        let newPageParams = oldPageParams;\n        let cancelled = false;\n\n        const addSignalProperty = object => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              var _context$signal;\n\n              if ((_context$signal = context.signal) != null && _context$signal.aborted) {\n                cancelled = true;\n              } else {\n                var _context$signal2;\n\n                (_context$signal2 = context.signal) == null ? void 0 : _context$signal2.addEventListener('abort', () => {\n                  cancelled = true;\n                });\n              }\n\n              return context.signal;\n            }\n          });\n        }; // Get query function\n\n\n        const queryFn = context.options.queryFn || (() => Promise.reject('Missing queryFn'));\n\n        const buildNewPages = (pages, param, page, previous) => {\n          newPageParams = previous ? [param, ...newPageParams] : [...newPageParams, param];\n          return previous ? [page, ...pages] : [...pages, page];\n        }; // Create function to fetch a page\n\n\n        const fetchPage = (pages, manual, param, previous) => {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.meta\n          };\n          addSignalProperty(queryFnContext);\n          const queryFnResult = queryFn(queryFnContext);\n          const promise = Promise.resolve(queryFnResult).then(page => buildNewPages(pages, param, page, previous));\n          return promise;\n        };\n\n        let promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param);\n        } // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param, true);\n        } // Refetch pages\n        else {\n          newPageParams = [];\n          const manual = typeof context.options.getNextPageParam === 'undefined';\n          const shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n          promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then(pages => {\n              const shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n              if (shouldFetchNextPage) {\n                const param = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n                return fetchPage(pages, manual, param);\n              }\n\n              return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n            });\n          }\n        }\n\n        const finalPromise = promise.then(pages => ({\n          pages,\n          pageParams: newPageParams\n        }));\n        return finalPromise;\n      };\n    }\n  };\n}\nexport function getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nexport function getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n}", "import { hashQueryKey, noop, parseFilterArgs, parseQueryArgs, partialMatchKey, hashQueryKeyByOptions, functionalUpdate } from \"./utils.mjs\";\nimport { QueryCache } from \"./queryCache.mjs\";\nimport { MutationCache } from \"./mutationCache.mjs\";\nimport { focusManager } from \"./focusManager.mjs\";\nimport { onlineManager } from \"./onlineManager.mjs\";\nimport { notifyManager } from \"./notifyManager.mjs\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.mjs\";\nimport { defaultLogger } from \"./logger.mjs\"; // TYPES\n\n// CLASS\nexport class QueryClient {\n  constructor(config = {}) {\n    this.queryCache = config.queryCache || new QueryCache();\n    this.mutationCache = config.mutationCache || new MutationCache();\n    this.logger = config.logger || defaultLogger;\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n  }\n\n  mount() {\n    this.unsubscribeFocus = focusManager.subscribe(() => {\n      if (focusManager.isFocused()) {\n        this.resumePausedMutations();\n        this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = onlineManager.subscribe(() => {\n      if (onlineManager.isOnline()) {\n        this.resumePausedMutations();\n        this.queryCache.onOnline();\n      }\n    });\n  }\n\n  unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n  }\n\n  isFetching(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    filters.fetchStatus = 'fetching';\n    return this.queryCache.findAll(filters).length;\n  }\n\n  isMutating(filters) {\n    return this.mutationCache.findAll({ ...filters,\n      fetching: true\n    }).length;\n  }\n\n  getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  }\n\n  getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey,\n      state\n    }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n\n  setQueryData(queryKey, updater, options) {\n    const query = this.queryCache.find(queryKey);\n    const prevData = query == null ? void 0 : query.state.data;\n    const data = functionalUpdate(updater, prevData);\n\n    if (typeof data === 'undefined') {\n      return undefined;\n    }\n\n    const parsedOptions = parseQueryArgs(queryKey);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(data, { ...options,\n      manual: true\n    });\n  }\n\n  setQueriesData(queryKeyOrFilters, updater, options) {\n    return notifyManager.batch(() => this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey\n    }) => [queryKey, this.setQueryData(queryKey, updater, options)]));\n  }\n\n  getQueryState(queryKey, filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  }\n\n  removeQueries(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    const queryCache = this.queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        queryCache.remove(query);\n      });\n    });\n  }\n\n  resetQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    const queryCache = this.queryCache;\n    const refetchFilters = {\n      type: 'active',\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  cancelQueries(arg1, arg2, arg3) {\n    const [filters, cancelOptions = {}] = parseFilterArgs(arg1, arg2, arg3);\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).map(query => query.cancel(cancelOptions)));\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n\n  invalidateQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    return notifyManager.batch(() => {\n      var _ref, _filters$refetchType;\n\n      this.queryCache.findAll(filters).forEach(query => {\n        query.invalidate();\n      });\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve();\n      }\n\n      const refetchFilters = { ...filters,\n        type: (_ref = (_filters$refetchType = filters.refetchType) != null ? _filters$refetchType : filters.type) != null ? _ref : 'active'\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  refetchQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).filter(query => !query.isDisabled()).map(query => {\n      var _options$cancelRefetc;\n\n      return query.fetch(undefined, { ...options,\n        cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,\n        meta: {\n          refetchPage: filters.refetchPage\n        }\n      });\n    }));\n    let promise = Promise.all(promises).then(noop);\n\n    if (!(options != null && options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  fetchQuery(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n\n  prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  }\n\n  fetchInfiniteQuery(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    parsedOptions.behavior = infiniteQueryBehavior();\n    return this.fetchQuery(parsedOptions);\n  }\n\n  prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  }\n\n  resumePausedMutations() {\n    return this.mutationCache.resumePausedMutations();\n  }\n\n  getQueryCache() {\n    return this.queryCache;\n  }\n\n  getMutationCache() {\n    return this.mutationCache;\n  }\n\n  getLogger() {\n    return this.logger;\n  }\n\n  getDefaultOptions() {\n    return this.defaultOptions;\n  }\n\n  setDefaultOptions(options) {\n    this.defaultOptions = options;\n  }\n\n  setQueryDefaults(queryKey, options) {\n    const result = this.queryDefaults.find(x => hashQueryKey(queryKey) === hashQueryKey(x.queryKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getQueryDefaults(queryKey) {\n    if (!queryKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.queryDefaults.find(x => partialMatchKey(queryKey, x.queryKey)); // Additional checks and error in dev mode\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.queryDefaults.filter(x => partialMatchKey(queryKey, x.queryKey)); // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n\n      if (matchingDefaults.length > 1) {\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(\"[QueryClient] Several query defaults match with key '\" + JSON.stringify(queryKey) + \"'. The first matching query defaults are used. Please check how query defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetquerydefaults.\");\n        }\n      }\n    }\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  setMutationDefaults(mutationKey, options) {\n    const result = this.mutationDefaults.find(x => hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getMutationDefaults(mutationKey) {\n    if (!mutationKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.mutationDefaults.find(x => partialMatchKey(mutationKey, x.mutationKey)); // Additional checks and error in dev mode\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.mutationDefaults.filter(x => partialMatchKey(mutationKey, x.mutationKey)); // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n\n      if (matchingDefaults.length > 1) {\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(\"[QueryClient] Several mutation defaults match with key '\" + JSON.stringify(mutationKey) + \"'. The first matching mutation defaults are used. Please check how mutation defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetmutationdefaults.\");\n        }\n      }\n    }\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  defaultQueryOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    const defaultedOptions = { ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options == null ? void 0 : options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(defaultedOptions.queryKey, defaultedOptions);\n    } // dependent default values\n\n\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== 'always';\n    }\n\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense;\n    }\n\n    return defaultedOptions;\n  }\n\n  defaultMutationOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    return { ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options == null ? void 0 : options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n\n  clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  }\n\n}", "import { isServer, isValidTimeout, noop, replaceData, shallowEqualObjects, timeUntilStale } from \"./utils.mjs\";\nimport { notifyManager } from \"./notifyManager.mjs\";\nimport { focusManager } from \"./focusManager.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\";\nimport { canFetch, isCancelledError } from \"./retryer.mjs\";\nexport class QueryObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.options = options;\n    this.trackedProps = new Set();\n    this.selectError = null;\n    this.bindMethods();\n    this.setOptions(options);\n  }\n\n  bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  }\n\n  onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  }\n\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  }\n\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  }\n\n  destroy() {\n    this.listeners = [];\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n    this.currentQuery.removeObserver(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    const mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n\n  getOptimisticResult(options) {\n    const query = this.client.getQueryCache().build(this.client, options);\n    return this.createResult(query, options);\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  trackResult(result) {\n    const trackedResult = {};\n    Object.keys(result).forEach(key => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n\n  getCurrentQuery() {\n    return this.currentQuery;\n  }\n\n  remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  }\n\n  refetch({\n    refetchPage,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        refetchPage\n      }\n    });\n  }\n\n  fetchOptimistic(options) {\n    const defaultedOptions = this.client.defaultQueryOptions(options);\n    const query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n\n  fetch(fetchOptions) {\n    var _fetchOptions$cancelR;\n\n    return this.executeFetch({ ...fetchOptions,\n      cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true\n    }).then(() => {\n      this.updateResult();\n      return this.currentResult;\n    });\n  }\n\n  executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    let promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions != null && fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  updateStaleTimeout() {\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    const time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    const timeout = time + 1;\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n\n  computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  }\n\n  updateRefetchInterval(nextInterval) {\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  }\n\n  updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  }\n\n  clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  }\n\n  clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  }\n\n  createResult(query, options) {\n    const prevQuery = this.currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.currentResult;\n    const prevResultState = this.currentResultState;\n    const prevResultOptions = this.currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    const {\n      state\n    } = query;\n    let {\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      fetchStatus,\n      status\n    } = state;\n    let isPreviousData = false;\n    let isPlaceholderData = false;\n    let data; // Optimistically set result in fetching state if needed\n\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode) ? 'fetching' : 'paused';\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle';\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && prevQueryResult != null && prevQueryResult.isSuccess && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n        data = this.selectResult;\n      } else {\n        try {\n          this.selectFn = options.select;\n          data = options.select(state.data);\n          data = replaceData(prevResult == null ? void 0 : prevResult.data, data, options);\n          this.selectResult = data;\n          this.selectError = null;\n        } catch (selectError) {\n          if (process.env.NODE_ENV !== 'production') {\n            this.client.getLogger().error(selectError);\n          }\n\n          this.selectError = selectError;\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      let placeholderData; // Memoize placeholder data\n\n      if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n            placeholderData = replaceData(prevResult == null ? void 0 : prevResult.data, placeholderData, options);\n            this.selectError = null;\n          } catch (selectError) {\n            if (process.env.NODE_ENV !== 'production') {\n              this.client.getLogger().error(selectError);\n            }\n\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    const isFetching = fetchStatus === 'fetching';\n    const result = {\n      status,\n      fetchStatus,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isRefetching: isFetching && status !== 'loading',\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  }\n\n  updateResult(notifyOptions) {\n    const prevResult = this.currentResult;\n    const nextResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify and update result if something has changed\n\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n\n    this.currentResult = nextResult; // Determine which callbacks to trigger\n\n    const defaultNotifyOptions = {\n      cache: true\n    };\n\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n\n      const {\n        notifyOnChangeProps\n      } = this.options;\n\n      if (notifyOnChangeProps === 'all' || !notifyOnChangeProps && !this.trackedProps.size) {\n        return true;\n      }\n\n      const includedProps = new Set(notifyOnChangeProps != null ? notifyOnChangeProps : this.trackedProps);\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error');\n      }\n\n      return Object.keys(this.currentResult).some(key => {\n        const typedKey = key;\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify({ ...defaultNotifyOptions,\n      ...notifyOptions\n    });\n  }\n\n  updateQuery() {\n    const query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    const prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n\n  onQueryUpdate(action) {\n    const notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  }\n\n  notify(notifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;\n\n        (_this$options$onSucce = (_this$options = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options, this.currentResult.data);\n        (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options2, this.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;\n\n        (_this$options$onError = (_this$options3 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options3, this.currentResult.error);\n        (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options4, undefined, this.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(listener => {\n          listener(this.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  }\n\n}\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}", "import { QueryObserver } from \"./queryObserver.mjs\";\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from \"./infiniteQueryBehavior.mjs\";\nexport class InfiniteQueryObserver extends QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: infiniteQueryBehavior()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.fetchStatus === 'fetching' && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.fetchStatus === 'fetching' && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    };\n  }\n\n}", "import { getDefaultState } from \"./mutation.mjs\";\nimport { notifyManager } from \"./notifyManager.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\";\n// CLASS\nexport class MutationObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.updateResult();\n  }\n\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  }\n\n  onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  }\n\n  onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    const notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  }\n\n  mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, { ...this.options,\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    });\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  }\n\n  updateResult() {\n    const state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    const result = { ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    };\n    this.currentResult = result;\n  }\n\n  notify(options) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions) {\n        if (options.onSuccess) {\n          var _this$mutateOptions$o, _this$mutateOptions, _this$mutateOptions$o2, _this$mutateOptions2;\n\n          (_this$mutateOptions$o = (_this$mutateOptions = this.mutateOptions).onSuccess) == null ? void 0 : _this$mutateOptions$o.call(_this$mutateOptions, this.currentResult.data, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o2 = (_this$mutateOptions2 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o2.call(_this$mutateOptions2, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context);\n        } else if (options.onError) {\n          var _this$mutateOptions$o3, _this$mutateOptions3, _this$mutateOptions$o4, _this$mutateOptions4;\n\n          (_this$mutateOptions$o3 = (_this$mutateOptions3 = this.mutateOptions).onError) == null ? void 0 : _this$mutateOptions$o3.call(_this$mutateOptions3, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o4 = (_this$mutateOptions4 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o4.call(_this$mutateOptions4, undefined, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        this.listeners.forEach(listener => {\n          listener(this.currentResult);\n        });\n      }\n    });\n  }\n\n}", "// TYPES\n// FUNCTIONS\nfunction dehydrateMutation(mutation) {\n  return {\n    mutationKey: mutation.options.mutationKey,\n    state: mutation.state\n  };\n} // Most config is not dehydrated but instead meant to configure again when\n// consuming the de/rehydrated data, typically with useQuery on the client.\n// Sometimes it might make sense to prefetch data on the server and include\n// in the html-payload, but not consume it on the initial render.\n\n\nfunction dehydrateQuery(query) {\n  return {\n    state: query.state,\n    queryKey: query.queryKey,\n    queryHash: query.queryHash\n  };\n}\n\nfunction defaultShouldDehydrateMutation(mutation) {\n  return mutation.state.isPaused;\n}\n\nfunction defaultShouldDehydrateQuery(query) {\n  return query.state.status === 'success';\n}\n\nexport function dehydrate(client, options = {}) {\n  const mutations = [];\n  const queries = [];\n\n  if (options.dehydrateMutations !== false) {\n    const shouldDehydrateMutation = options.shouldDehydrateMutation || defaultShouldDehydrateMutation;\n    client.getMutationCache().getAll().forEach(mutation => {\n      if (shouldDehydrateMutation(mutation)) {\n        mutations.push(dehydrateMutation(mutation));\n      }\n    });\n  }\n\n  if (options.dehydrateQueries !== false) {\n    const shouldDehydrateQuery = options.shouldDehydrateQuery || defaultShouldDehydrateQuery;\n    client.getQueryCache().getAll().forEach(query => {\n      if (shouldDehydrateQuery(query)) {\n        queries.push(dehydrateQuery(query));\n      }\n    });\n  }\n\n  return {\n    mutations,\n    queries\n  };\n}\nexport function hydrate(client, dehydratedState, options) {\n  if (typeof dehydratedState !== 'object' || dehydratedState === null) {\n    return;\n  }\n\n  const mutationCache = client.getMutationCache();\n  const queryCache = client.getQueryCache(); // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n  const mutations = dehydratedState.mutations || []; // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n  const queries = dehydratedState.queries || [];\n  mutations.forEach(dehydratedMutation => {\n    var _options$defaultOptio;\n\n    mutationCache.build(client, { ...(options == null ? void 0 : (_options$defaultOptio = options.defaultOptions) == null ? void 0 : _options$defaultOptio.mutations),\n      mutationKey: dehydratedMutation.mutationKey\n    }, dehydratedMutation.state);\n  });\n  queries.forEach(dehydratedQuery => {\n    var _options$defaultOptio2;\n\n    const query = queryCache.get(dehydratedQuery.queryHash); // Do not hydrate if an existing query exists with newer data\n\n    if (query) {\n      if (query.state.dataUpdatedAt < dehydratedQuery.state.dataUpdatedAt) {\n        query.setState(dehydratedQuery.state);\n      }\n\n      return;\n    } // Restore query\n\n\n    queryCache.build(client, { ...(options == null ? void 0 : (_options$defaultOptio2 = options.defaultOptions) == null ? void 0 : _options$defaultOptio2.queries),\n      queryKey: dehydratedQuery.queryKey,\n      queryHash: dehydratedQuery.queryHash\n    }, dehydratedQuery.state);\n  });\n}", "import ReactDOM from 'react-dom';\nexport const unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;", "import { notifyManager } from \"../core/index.mjs\";\nimport { unstable_batchedUpdates } from \"./reactBatchedUpdates.mjs\";\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates);", "import React from 'react';\nexport const defaultContext = /*#__PURE__*/React.createContext(undefined);\nconst QueryClientSharingContext = /*#__PURE__*/React.createContext(false); // If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(context, contextSharing) {\n  if (context) {\n    return context;\n  }\n\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nexport const useQueryClient = ({\n  context\n} = {}) => {\n  const queryClient = React.useContext(getQueryClientContext(context, React.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nexport const QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  const Context = getQueryClientContext(context, contextSharing);\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\n    value: !context && contextSharing\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children));\n};", "import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport const useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nexport const QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};", "import React from 'react';\nimport { useSyncExternalStore } from \"./useSyncExternalStore.mjs\";\nimport { notifyManager } from \"../core/index.mjs\";\nimport { parseFilterArgs } from \"../core/utils.mjs\";\nimport { useQueryClient } from \"./QueryClientProvider.mjs\";\nexport function useIsFetching(arg1, arg2, arg3) {\n  const [filters, options = {}] = parseFilterArgs(arg1, arg2, arg3);\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const queryCache = queryClient.getQueryCache();\n  return useSyncExternalStore(React.useCallback(onStoreChange => queryCache.subscribe(notifyManager.batchCalls(onStoreChange)), [queryCache]), () => queryClient.isFetching(filters), () => queryClient.isFetching(filters));\n}", "import pkg from 'use-sync-external-store/shim/index.js';\nexport const useSyncExternalStore = pkg.useSyncExternalStore;", "import React from 'react';\nimport { useSyncExternalStore } from \"./useSyncExternalStore.mjs\";\nimport { notifyManager } from \"../core/notifyManager.mjs\";\nimport { parseMutationFilterArgs } from \"../core/utils.mjs\";\nimport { useQueryClient } from \"./QueryClientProvider.mjs\";\nexport function useIsMutating(arg1, arg2, arg3) {\n  const [filters, options = {}] = parseMutationFilterArgs(arg1, arg2, arg3);\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const queryCache = queryClient.getQueryCache();\n  return useSyncExternalStore(React.useCallback(onStoreChange => queryCache.subscribe(notifyManager.batchCalls(onStoreChange)), [queryCache]), () => queryClient.isMutating(filters), () => queryClient.isMutating(filters));\n}", "import React from 'react';\nimport { useSyncExternalStore } from \"./useSyncExternalStore.mjs\";\nimport { notifyManager } from \"../core/index.mjs\";\nimport { noop, parseMutationArgs } from \"../core/utils.mjs\";\nimport { MutationObserver } from \"../core/mutationObserver.mjs\";\nimport { useQueryClient } from \"./QueryClientProvider.mjs\";\nimport { shouldThrowError } from \"./utils.mjs\"; // HOOK\n\nexport function useMutation(arg1, arg2, arg3) {\n  const options = parseMutationArgs(arg1, arg2, arg3);\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const [observer] = React.useState(() => new MutationObserver(queryClient, options));\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = useSyncExternalStore(React.useCallback(onStoreChange => observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  const mutate = React.useCallback((variables, mutateOptions) => {\n    observer.mutate(variables, mutateOptions).catch(noop);\n  }, [observer]);\n\n  if (result.error && shouldThrowError(observer.options.useErrorBoundary, [result.error])) {\n    throw result.error;\n  }\n\n  return { ...result,\n    mutate,\n    mutateAsync: result.mutate\n  };\n}", "export function shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}", "import React from 'react';\nimport { useSyncExternalStore } from \"./useSyncExternalStore.mjs\";\nimport { notifyManager } from \"../core/index.mjs\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.mjs\";\nimport { useQueryClient } from \"./QueryClientProvider.mjs\";\nimport { shouldThrowError } from \"./utils.mjs\";\nimport { useIsRestoring } from \"./isRestoring.mjs\";\nexport function useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  const [observer] = React.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(React.useCallback(onStoreChange => isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading && result.isFetching && !isRestoring) {\n    throw observer.fetchOptimistic(defaultedOptions).then(({\n      data\n    }) => {\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(error => {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.useErrorBoundary, [result.error, observer.getCurrentQuery()])) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}", "import React from 'react';\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nexport const useIsRestoring = () => React.useContext(IsRestoringContext);\nexport const IsRestoringProvider = IsRestoringContext.Provider;", "import React from 'react';\nimport { useSyncExternalStore } from \"./useSyncExternalStore.mjs\";\nimport { notifyManager } from \"../core/notifyManager.mjs\";\nimport { QueriesObserver } from \"../core/queriesObserver.mjs\";\nimport { useQueryClient } from \"./QueryClientProvider.mjs\";\nimport { useIsRestoring } from \"./isRestoring.mjs\"; // This defines the `UseQueryOptions` that are accepted in `QueriesOptions` & `GetOptions`.\n// - `context` is omitted as it is passed as a root-level option to `useQueries` instead.\n\nexport function useQueries({\n  queries,\n  context\n}) {\n  const queryClient = useQueryClient({\n    context\n  });\n  const isRestoring = useIsRestoring();\n  const defaultedQueries = React.useMemo(() => queries.map(options => {\n    const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure the results are already in fetching state before subscribing or updating options\n\n    defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic';\n    return defaultedOptions;\n  }), [queries, queryClient, isRestoring]);\n  const [observer] = React.useState(() => new QueriesObserver(queryClient, defaultedQueries));\n  const result = observer.getOptimisticResult(defaultedQueries);\n  useSyncExternalStore(React.useCallback(onStoreChange => isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setQueries(defaultedQueries, {\n      listeners: false\n    });\n  }, [defaultedQueries, observer]);\n  return result;\n}", "import React from 'react';\nimport { hydrate } from \"../core/index.mjs\";\nimport { useQueryClient } from \"./QueryClientProvider.mjs\";\nexport function useHydrate(state, options = {}) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const optionsRef = React.useRef(options);\n  optionsRef.current = options; // Running hydrate again with the same queries is safe,\n  // it wont overwrite or initialize existing queries,\n  // relying on useMemo here is only a performance optimization.\n  // hydrate can and should be run *during* render here for SSR to work properly\n\n  React.useMemo(() => {\n    if (state) {\n      hydrate(queryClient, state, optionsRef.current);\n    }\n  }, [queryClient, state]);\n}\nexport const Hydrate = ({\n  children,\n  options,\n  state\n}) => {\n  useHydrate(state, options);\n  return children;\n};", "import { dehydrate, hydrate } from \"../core/index.mjs\";\n\n/**\n * Restores persisted data to the QueryCache\n *  - data obtained from persister.restoreClient\n *  - data is hydrated using hydrateOptions\n * If data is expired, busted, empty, or throws, it runs persister.removeClient\n */\nexport async function persistQueryClientRestore({\n  queryClient,\n  persister,\n  maxAge = 1000 * 60 * 60 * 24,\n  buster = '',\n  hydrateOptions\n}) {\n  try {\n    const persistedClient = await persister.restoreClient();\n\n    if (persistedClient) {\n      if (persistedClient.timestamp) {\n        const expired = Date.now() - persistedClient.timestamp > maxAge;\n        const busted = persistedClient.buster !== buster;\n\n        if (expired || busted) {\n          persister.removeClient();\n        } else {\n          hydrate(queryClient, persistedClient.clientState, hydrateOptions);\n        }\n      } else {\n        persister.removeClient();\n      }\n    }\n  } catch (err) {\n    if (process.env.NODE_ENV !== 'production') {\n      queryClient.getLogger().error(err);\n      queryClient.getLogger().warn('Encountered an error attempting to restore client cache from persisted location. As a precaution, the persisted cache will be discarded.');\n    }\n\n    persister.removeClient();\n  }\n}\n/**\n * Persists data from the QueryCache\n *  - data dehydrated using dehydrateOptions\n *  - data is persisted using persister.persistClient\n */\n\nexport async function persistQueryClientSave({\n  queryClient,\n  persister,\n  buster = '',\n  dehydrateOptions\n}) {\n  const persistClient = {\n    buster,\n    timestamp: Date.now(),\n    clientState: dehydrate(queryClient, dehydrateOptions)\n  };\n  await persister.persistClient(persistClient);\n}\n/**\n * Subscribe to QueryCache and MutationCache updates (for persisting)\n * @returns an unsubscribe function (to discontinue monitoring)\n */\n\nexport function persistQueryClientSubscribe(props) {\n  const unsubscribeQueryCache = props.queryClient.getQueryCache().subscribe(() => {\n    persistQueryClientSave(props);\n  });\n  const unusbscribeMutationCache = props.queryClient.getMutationCache().subscribe(() => {\n    persistQueryClientSave(props);\n  });\n  return () => {\n    unsubscribeQueryCache();\n    unusbscribeMutationCache();\n  };\n}\n/**\n * Restores persisted data to QueryCache and persists further changes.\n */\n\nexport function persistQueryClient(props) {\n  let hasUnsubscribed = false;\n  let persistQueryClientUnsubscribe;\n\n  const unsubscribe = () => {\n    hasUnsubscribed = true;\n    persistQueryClientUnsubscribe == null ? void 0 : persistQueryClientUnsubscribe();\n  }; // Attempt restore\n\n\n  const restorePromise = persistQueryClientRestore(props).then(() => {\n    if (!hasUnsubscribed) {\n      // Subscribe to changes in the query cache to trigger the save\n      persistQueryClientUnsubscribe = persistQueryClientSubscribe(props);\n    }\n  });\n  return [unsubscribe, restorePromise];\n}", "import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { persistQueryClient } from \"./persist.mjs\";\nimport { QueryClientProvider } from \"../reactjs/index.mjs\";\nimport { IsRestoringProvider } from \"../reactjs/isRestoring.mjs\";\nexport const PersistQueryClientProvider = ({\n  client,\n  children,\n  persistOptions,\n  onSuccess,\n  ...props\n}) => {\n  const [isRestoring, setIsRestoring] = React.useState(true);\n  const refs = React.useRef({\n    persistOptions,\n    onSuccess\n  });\n  React.useEffect(() => {\n    refs.current = {\n      persistOptions,\n      onSuccess\n    };\n  });\n  React.useEffect(() => {\n    let isStale = false;\n    setIsRestoring(true);\n    const [unsubscribe, promise] = persistQueryClient({ ...refs.current.persistOptions,\n      queryClient: client\n    });\n    promise.then(() => {\n      if (!isStale) {\n        refs.current.onSuccess == null ? void 0 : refs.current.onSuccess();\n        setIsRestoring(false);\n      }\n    });\n    return () => {\n      isStale = true;\n      unsubscribe();\n    };\n  }, [client]);\n  return /*#__PURE__*/React.createElement(QueryClientProvider, _extends({\n    client: client\n  }, props), /*#__PURE__*/React.createElement(IsRestoringProvider, {\n    value: isRestoring\n  }, children));\n};", "import { noop } from \"../core/utils.mjs\";\nexport function createWebStoragePersister({\n  storage,\n  key = \"REACT_QUERY_OFFLINE_CACHE\",\n  throttleTime = 1000,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse,\n  retry\n}) {\n  if (typeof storage !== 'undefined') {\n    const trySave = persistedClient => {\n      try {\n        storage.setItem(key, serialize(persistedClient));\n      } catch (error) {\n        return error;\n      }\n    };\n\n    return {\n      persistClient: throttle(persistedClient => {\n        let client = persistedClient;\n        let error = trySave(client);\n        let errorCount = 0;\n\n        while (error && client) {\n          errorCount++;\n          client = retry == null ? void 0 : retry({\n            persistedClient: client,\n            error,\n            errorCount\n          });\n\n          if (client) {\n            error = trySave(client);\n          }\n        }\n      }, throttleTime),\n      restoreClient: () => {\n        const cacheString = storage.getItem(key);\n\n        if (!cacheString) {\n          return;\n        }\n\n        return deserialize(cacheString);\n      },\n      removeClient: () => {\n        storage.removeItem(key);\n      }\n    };\n  }\n\n  return {\n    persistClient: noop,\n    restoreClient: noop,\n    removeClient: noop\n  };\n}\n\nfunction throttle(func, wait = 100) {\n  let timer = null;\n  let params;\n  return function (...args) {\n    params = args;\n\n    if (timer === null) {\n      timer = setTimeout(() => {\n        func(...params);\n        timer = null;\n      }, wait);\n    }\n  };\n}"],
  "mappings": "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",
  "names": []
}
